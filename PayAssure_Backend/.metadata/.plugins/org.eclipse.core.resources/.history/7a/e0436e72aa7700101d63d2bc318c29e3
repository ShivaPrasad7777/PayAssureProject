<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20131001" xmlns:xmi="http://www.omg.org/spec/XMI/20131001" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/5.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_mV1OYHLIEfCMALJnZIqq0A" name="CustomerMicroservice">
    <eAnnotations xmi:id="_pDOBsHLIEfCMALJnZIqq0A" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_pDOowHLIEfCMALJnZIqq0A" source="codegen">
        <details xmi:id="_pDPP0HLIEfCMALJnZIqq0A" key="codegenDirectory" value="/CustomerMicroservice/src/main/java"/>
        <details xmi:id="_rGKw4HLIEfCMALJnZIqq0A" key="AssociatedSourceCode" value="/CustomerMicroservice/src/main/java/training/iqgateway/CustomerMicroserviceApplication.java;1752389581/1;/CustomerMicroservice/src/main/java/training/iqgateway/config/AppConfig.java;2628837685/1;/CustomerMicroservice/src/main/java/training/iqgateway/entity/NotificationRequest.java;1830172173/1;/CustomerMicroservice/src/main/java/training/iqgateway/repository/CustomerRepository.java;1416203788/1;/CustomerMicroservice/src/main/java/training/iqgateway/repository/InvoiceRepository.java;317354485/1;/CustomerMicroservice/src/main/java/training/iqgateway/repository/PaymentRepository.java;1408081225/1;/CustomerMicroservice/src/main/java/training/iqgateway/repository/PolicyRepository.java;45944403/1;/CustomerMicroservice/src/test/java/training/iqgateway/CustomerMicroserviceApplicationTests.java;4230516341/1;/CustomerMicroservice/src/test/java/training/iqgateway/controller/CustomerControllerTest.java;1637297455/1;/CustomerMicroservice/src/main/java/training/iqgateway/service/impl/CustomerServiceImpl.java;2524648297/1;/CustomerMicroservice/src/main/java/training/iqgateway/service/CustomerService.java;744805479/1;/CustomerMicroservice/src/main/java/training/iqgateway/entity/Policy.java;3340693448/1;/CustomerMicroservice/src/main/java/training/iqgateway/entity/Payment.java;4102833526/1;/CustomerMicroservice/src/main/java/training/iqgateway/entity/Invoice.java;2306354780/1;/CustomerMicroservice/src/main/java/training/iqgateway/entity/Customer.java;1862177238/1;/CustomerMicroservice/src/main/java/training/iqgateway/controller/CustomerController.java;3242698268/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_qYImMHLIEfCMALJnZIqq0A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_qYImMXLIEfCMALJnZIqq0A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_qYImMnLIEfCMALJnZIqq0A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_qYImM3LIEfCMALJnZIqq0A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_qYJNQHLIEfCMALJnZIqq0A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_qYJNQXLIEfCMALJnZIqq0A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_qYJNQnLIEfCMALJnZIqq0A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_qYJNQ3LIEfCMALJnZIqq0A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_qYKbYHLIEfCMALJnZIqq0A">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_qUdnIHLIEfCMALJnZIqq0A" name="training">
      <packagedElement xmi:type="uml:Package" xmi:id="_qUzlYHLIEfCMALJnZIqq0A" name="iqgateway">
        <packagedElement xmi:type="uml:Package" xmi:id="_qU66IHLIEfCMALJnZIqq0A" name="config">
          <packagedElement xmi:type="uml:Class" xmi:id="_qYYd0HLIEfCMALJnZIqq0A" name="AppConfig">
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1kJEHLIEfCMALJnZIqq0A" name="restTemplate" specification="_qYaTAXLIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_q1kJEXLIEfCMALJnZIqq0A" type="_qywFoXLIEfCMALJnZIqq0A" direction="return"/>
              <language>java</language>
              <body>return new RestTemplate();&#xD;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_qYaTAXLIEfCMALJnZIqq0A" name="restTemplate" method="_q1kJEHLIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_q0GwgHLIEfCMALJnZIqq0A" type="_qywFoXLIEfCMALJnZIqq0A" direction="return"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_qU_yoHLIEfCMALJnZIqq0A" name="entity">
          <packagedElement xmi:type="uml:Class" xmi:id="_qYfykHLIEfCMALJnZIqq0A" name="NotificationRequest">
            <ownedAttribute xmi:id="_q01wUHLIEfCMALJnZIqq0A" name="customerId">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q02XYHLIEfCMALJnZIqq0A" name="policyId">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_qa6NYHLIEfCMALJnZIqq0A" name="Policy">
            <ownedAttribute xmi:id="_q0_hUHLIEfCMALJnZIqq0A" name="id" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1AIYnLIEfCMALJnZIqq0A" name="insurerId" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1AIY3LIEfCMALJnZIqq0A" name="type" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1AvcHLIEfCMALJnZIqq0A" name="coverageAmount" visibility="private" type="_q0WoIHLIEfCMALJnZIqq0A"/>
            <ownedAttribute xmi:id="_q1AvcXLIEfCMALJnZIqq0A" name="monthlyPremium" visibility="private" type="_q0WoIHLIEfCMALJnZIqq0A"/>
            <ownedAttribute xmi:id="_q1BWgHLIEfCMALJnZIqq0A" name="durationMonths" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Integer"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1BWgXLIEfCMALJnZIqq0A" name="active" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#Boolean"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_q1B9kHLIEfCMALJnZIqq0A" value="true"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1B9kXLIEfCMALJnZIqq0A" name="createdAt" visibility="private" type="_qzTfQXLIEfCMALJnZIqq0A">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_q1B9knLIEfCMALJnZIqq0A" value="new Date()"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1CkoHLIEfCMALJnZIqq0A" name="policyType" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1CkoXLIEfCMALJnZIqq0A" name="name" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_qbCwQHLIEfCMALJnZIqq0A" name="Payment">
            <ownedAttribute xmi:id="_q1DLsHLIEfCMALJnZIqq0A" name="id" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1DywnLIEfCMALJnZIqq0A" name="invoiceId" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1EZ0HLIEfCMALJnZIqq0A" name="customerId" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1EZ0XLIEfCMALJnZIqq0A" name="insurerId" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1FA4HLIEfCMALJnZIqq0A" name="amount" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1FA4XLIEfCMALJnZIqq0A" name="status" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1Fn8HLIEfCMALJnZIqq0A" name="razorpayPaymentId" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1Fn8XLIEfCMALJnZIqq0A" name="razorpaySubscriptionId" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_q1GPAHLIEfCMALJnZIqq0A" value="&quot;&quot;"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1GPAXLIEfCMALJnZIqq0A" name="method" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1GPAnLIEfCMALJnZIqq0A" name="autoPay" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1G2EHLIEfCMALJnZIqq0A" name="taxDetails" visibility="private" type="_qbGaoHLIEfCMALJnZIqq0A" association="_q2NpU3LIEfCMALJnZIqq0A"/>
            <ownedAttribute xmi:id="_q1G2EXLIEfCMALJnZIqq0A" name="paidAt" visibility="private" type="_qzTfQXLIEfCMALJnZIqq0A"/>
            <ownedAttribute xmi:id="_q1G2EnLIEfCMALJnZIqq0A" name="policyIds" visibility="private" isOrdered="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_q1HdIHLIEfCMALJnZIqq0A" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1HdIXLIEfCMALJnZIqq0A" name="policyNames" visibility="private" isOrdered="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_q1HdInLIEfCMALJnZIqq0A" value="*"/>
            </ownedAttribute>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_qbGaoHLIEfCMALJnZIqq0A" name="TaxDetails">
              <eAnnotations xmi:id="_qbGaoXLIEfCMALJnZIqq0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_qbGaonLIEfCMALJnZIqq0A" key="static"/>
              </eAnnotations>
              <ownedAttribute xmi:id="_q1IEMHLIEfCMALJnZIqq0A" name="taxType" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_q1IEMXLIEfCMALJnZIqq0A" name="taxRate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_q1IEMnLIEfCMALJnZIqq0A" name="taxAmount" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_q1IrQHLIEfCMALJnZIqq0A" name="totalAmount" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedAttribute>
            </nestedClassifier>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_qbMhQHLIEfCMALJnZIqq0A" name="Invoice">
            <ownedAttribute xmi:id="_q1JSUHLIEfCMALJnZIqq0A" name="id" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1J5YnLIEfCMALJnZIqq0A" name="customerId" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1J5Y3LIEfCMALJnZIqq0A" name="insurerId" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1KgcHLIEfCMALJnZIqq0A" name="amount" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1KgcXLIEfCMALJnZIqq0A" name="status" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1LHgHLIEfCMALJnZIqq0A" name="validUpto" visibility="private" type="_qzTfQXLIEfCMALJnZIqq0A"/>
            <ownedAttribute xmi:id="_q1LHgXLIEfCMALJnZIqq0A" name="razorpayOrderId" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1LukHLIEfCMALJnZIqq0A" name="taxDetailsList" visibility="private" type="_qbQLoHLIEfCMALJnZIqq0A" isOrdered="true" association="_q2OQYXLIEfCMALJnZIqq0A">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_q1LukXLIEfCMALJnZIqq0A" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1LuknLIEfCMALJnZIqq0A" name="createdAt" visibility="private" type="_qzTfQXLIEfCMALJnZIqq0A"/>
            <ownedAttribute xmi:id="_q1MVoHLIEfCMALJnZIqq0A" name="policyIds" visibility="private" isOrdered="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_q1MVoXLIEfCMALJnZIqq0A" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1MVonLIEfCMALJnZIqq0A" name="paymentLink" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1M8sHLIEfCMALJnZIqq0A" name="months" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1M8sXLIEfCMALJnZIqq0A" name="razorpaySubscriptionId" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_q1M8snLIEfCMALJnZIqq0A" value="&quot;&quot;"/>
            </ownedAttribute>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_qbQLoHLIEfCMALJnZIqq0A" name="TaxDetails">
              <eAnnotations xmi:id="_qbQLoXLIEfCMALJnZIqq0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_qbQysHLIEfCMALJnZIqq0A" key="static"/>
              </eAnnotations>
              <ownedAttribute xmi:id="_q1NjwHLIEfCMALJnZIqq0A" name="policyId" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_q1NjwXLIEfCMALJnZIqq0A" name="gstRate" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_q1NjwnLIEfCMALJnZIqq0A" name="taxAmount" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_q1OK0HLIEfCMALJnZIqq0A" name="totalAmount" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedAttribute>
            </nestedClassifier>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_qbbKwHLIEfCMALJnZIqq0A" name="Customer">
            <ownedAttribute xmi:id="_q1Ox4HLIEfCMALJnZIqq0A" name="id" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1PY8nLIEfCMALJnZIqq0A" name="name" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1PY83LIEfCMALJnZIqq0A" name="email" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1QAAHLIEfCMALJnZIqq0A" name="phone" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1QAAXLIEfCMALJnZIqq0A" name="address" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1QAAnLIEfCMALJnZIqq0A" name="password" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1QnEHLIEfCMALJnZIqq0A" name="autoPayEnabled" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1QnEXLIEfCMALJnZIqq0A" name="policyIds" visibility="private" isOrdered="true">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_q1QnEnLIEfCMALJnZIqq0A" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1QnE3LIEfCMALJnZIqq0A" name="paymentHistory" visibility="private" type="_qbfcMHLIEfCMALJnZIqq0A" isOrdered="true" association="_q2O3cXLIEfCMALJnZIqq0A">
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_q1QnFHLIEfCMALJnZIqq0A" value="*"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1ROIHLIEfCMALJnZIqq0A" name="createdAt" visibility="private" type="_qzTfQXLIEfCMALJnZIqq0A"/>
            <ownedAttribute xmi:id="_q1ROIXLIEfCMALJnZIqq0A" name="razorpayCustomerId" visibility="private">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
            </ownedAttribute>
            <nestedClassifier xmi:type="uml:Class" xmi:id="_qbfcMHLIEfCMALJnZIqq0A" name="PaymentHistory">
              <eAnnotations xmi:id="_qbgDQHLIEfCMALJnZIqq0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
                <details xmi:id="_qbgDQXLIEfCMALJnZIqq0A" key="static"/>
              </eAnnotations>
              <ownedAttribute xmi:id="_q1ROInLIEfCMALJnZIqq0A" name="policyId" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_q1R1MHLIEfCMALJnZIqq0A" name="status" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_q1R1MXLIEfCMALJnZIqq0A" name="lastPaidDate" visibility="private" type="_qzTfQXLIEfCMALJnZIqq0A"/>
              <ownedAttribute xmi:id="_q1R1MnLIEfCMALJnZIqq0A" name="validUpto" visibility="private" type="_qzTfQXLIEfCMALJnZIqq0A"/>
              <ownedAttribute xmi:id="_q1ScQHLIEfCMALJnZIqq0A" name="razorpaySubscriptionId" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_q1ScQXLIEfCMALJnZIqq0A" value="&quot;&quot;"/>
              </ownedAttribute>
            </nestedClassifier>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_q2NpU3LIEfCMALJnZIqq0A" name="" memberEnd="_q2NpVHLIEfCMALJnZIqq0A _q1G2EHLIEfCMALJnZIqq0A">
            <ownedEnd xmi:id="_q2NpVHLIEfCMALJnZIqq0A" name="" type="_qbCwQHLIEfCMALJnZIqq0A" association="_q2NpU3LIEfCMALJnZIqq0A"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_q2OQYXLIEfCMALJnZIqq0A" name="" memberEnd="_q2OQYnLIEfCMALJnZIqq0A _q1LukHLIEfCMALJnZIqq0A">
            <ownedEnd xmi:id="_q2OQYnLIEfCMALJnZIqq0A" name="" type="_qbMhQHLIEfCMALJnZIqq0A" association="_q2OQYXLIEfCMALJnZIqq0A"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_q2O3cXLIEfCMALJnZIqq0A" name="" memberEnd="_q2O3cnLIEfCMALJnZIqq0A _q1QnE3LIEfCMALJnZIqq0A">
            <ownedEnd xmi:id="_q2O3cnLIEfCMALJnZIqq0A" name="" type="_qbbKwHLIEfCMALJnZIqq0A" association="_q2O3cXLIEfCMALJnZIqq0A"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_qVF5QHLIEfCMALJnZIqq0A" name="repository">
          <packagedElement xmi:type="uml:Interface" xmi:id="_qYiO0HLIEfCMALJnZIqq0A" name="CustomerRepository">
            <generalization xmi:id="_q0HXkHLIEfCMALJnZIqq0A" general="_qyzI8HLIEfCMALJnZIqq0A"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_qYlSIHLIEfCMALJnZIqq0A" name="InvoiceRepository">
            <generalization xmi:id="_q0IlsHLIEfCMALJnZIqq0A" general="_qyzI8HLIEfCMALJnZIqq0A"/>
            <ownedOperation xmi:id="_qYnHUHLIEfCMALJnZIqq0A" name="findByCustomerIdAndStatus" visibility="package">
              <ownedParameter xmi:id="_qYnuYHLIEfCMALJnZIqq0A" name="customerId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qYnuYXLIEfCMALJnZIqq0A" name="status">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qYoVcHLIEfCMALJnZIqq0A" type="_qbMhQHLIEfCMALJnZIqq0A" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qYo8gHLIEfCMALJnZIqq0A" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_qYqxsHLIEfCMALJnZIqq0A" name="findByRazorpayOrderId">
              <ownedParameter xmi:id="_qYqxsXLIEfCMALJnZIqq0A" name="razorpayOrderId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q0JMwXLIEfCMALJnZIqq0A" type="_qy0XEHLIEfCMALJnZIqq0A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_q0Jz0HLIEfCMALJnZIqq0A" name="findByCustomerIdAndStatusIn">
              <ownedParameter xmi:id="_q0Jz0XLIEfCMALJnZIqq0A" name="customerId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q0Jz0nLIEfCMALJnZIqq0A" name="statuses" type="_qyxTwHLIEfCMALJnZIqq0A"/>
              <ownedParameter xmi:id="_q0Jz03LIEfCMALJnZIqq0A" type="_qbMhQHLIEfCMALJnZIqq0A" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_q0Jz1HLIEfCMALJnZIqq0A" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_qYzUkHLIEfCMALJnZIqq0A" name="PaymentRepository">
            <generalization xmi:id="_q0LB8HLIEfCMALJnZIqq0A" general="_qyzI8HLIEfCMALJnZIqq0A"/>
            <ownedOperation xmi:id="_q0MQEHLIEfCMALJnZIqq0A" name="findByCustomerId" visibility="package">
              <ownedParameter xmi:id="_q0MQEXLIEfCMALJnZIqq0A" name="customerId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q0MQEnLIEfCMALJnZIqq0A" name="sort" type="_qyyh4HLIEfCMALJnZIqq0A"/>
              <ownedParameter xmi:id="_q0MQE3LIEfCMALJnZIqq0A" type="_qbCwQHLIEfCMALJnZIqq0A" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_q0MQFHLIEfCMALJnZIqq0A" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_qY3mAHLIEfCMALJnZIqq0A" name="PolicyRepository">
            <generalization xmi:id="_q0M3IHLIEfCMALJnZIqq0A" general="_qyzI8HLIEfCMALJnZIqq0A"/>
            <ownedOperation xmi:id="_q0NeMXLIEfCMALJnZIqq0A" name="findAllByIdIn">
              <ownedParameter xmi:id="_q0NeMnLIEfCMALJnZIqq0A" name="ids" type="_qyxTwHLIEfCMALJnZIqq0A"/>
              <ownedParameter xmi:id="_q0NeM3LIEfCMALJnZIqq0A" type="_qa6NYHLIEfCMALJnZIqq0A" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_q0NeNHLIEfCMALJnZIqq0A" value="*"/>
              </ownedParameter>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_qVXmEHLIEfCMALJnZIqq0A" name="service">
          <packagedElement xmi:type="uml:Package" xmi:id="_qWNTkHLIEfCMALJnZIqq0A" name="impl">
            <packagedElement xmi:type="uml:Class" xmi:id="_qZqQMHLIEfCMALJnZIqq0A" name="CustomerServiceImpl">
              <ownedAttribute xmi:id="_q04zoXLIEfCMALJnZIqq0A" name="log" visibility="private" isLeaf="true" isStatic="true" type="_qzIgIHLIEfCMALJnZIqq0A" isReadOnly="true" association="_q2J-8XLIEfCMALJnZIqq0A">
                <defaultValue xmi:type="uml:LiteralString" xmi:id="_q05asHLIEfCMALJnZIqq0A" value="LoggerFactory.getLogger(CustomerServiceImpl.class)"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_q05asnLIEfCMALJnZIqq0A" name="mongoTemplate" visibility="private" type="_qzY-0XLIEfCMALJnZIqq0A" association="_q2LNEXLIEfCMALJnZIqq0A"/>
              <ownedAttribute xmi:id="_q06BwXLIEfCMALJnZIqq0A" name="invoiceRepository" visibility="private" type="_qYlSIHLIEfCMALJnZIqq0A" association="_q2L0IXLIEfCMALJnZIqq0A"/>
              <ownedAttribute xmi:id="_q06BxHLIEfCMALJnZIqq0A" name="paymentRepository" visibility="private" type="_qYzUkHLIEfCMALJnZIqq0A" association="_q2L0JHLIEfCMALJnZIqq0A"/>
              <ownedAttribute xmi:id="_q06o0nLIEfCMALJnZIqq0A" name="customerRepository" visibility="private" type="_qYiO0HLIEfCMALJnZIqq0A" association="_q2MbMXLIEfCMALJnZIqq0A"/>
              <ownedAttribute xmi:id="_q06o1XLIEfCMALJnZIqq0A" name="policyRepository" visibility="private" type="_qY3mAHLIEfCMALJnZIqq0A" association="_q2NCQXLIEfCMALJnZIqq0A"/>
              <ownedAttribute xmi:id="_q0728HLIEfCMALJnZIqq0A" name="restTemplate" visibility="private" type="_qywFoXLIEfCMALJnZIqq0A" association="_q2NpUHLIEfCMALJnZIqq0A"/>
              <ownedAttribute xmi:id="_q07283LIEfCMALJnZIqq0A" name="keyId" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_q08eA3LIEfCMALJnZIqq0A" name="keySecret" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_q09FE3LIEfCMALJnZIqq0A" name="planId" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_q09sI3LIEfCMALJnZIqq0A" name="notificationBaseUrl" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <interfaceRealization xmi:id="_qzlzIHLIEfCMALJnZIqq0A" client="_qZqQMHLIEfCMALJnZIqq0A" supplier="_qaldQHLIEfCMALJnZIqq0A" contract="_qaldQHLIEfCMALJnZIqq0A"/>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1mlUHLIEfCMALJnZIqq0A" name="recordAutopayPayment" specification="_q0SWsHLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_q1mlUXLIEfCMALJnZIqq0A" name="customerId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1mlUnLIEfCMALJnZIqq0A" name="subscriptionId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1mlU3LIEfCMALJnZIqq0A" name="orderId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1mlVHLIEfCMALJnZIqq0A" name="paymentId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1mlVXLIEfCMALJnZIqq0A" name="policyIds" type="_qyxTwHLIEfCMALJnZIqq0A"/>
                <ownedParameter xmi:id="_q1mlVnLIEfCMALJnZIqq0A" name="policyNames" type="_qyxTwHLIEfCMALJnZIqq0A"/>
                <language>java</language>
                <body>if (customerId == null || policyIds == null || policyIds.isEmpty()) {&#xD;
			throw new IllegalArgumentException(&quot;Missing required data&quot;);&#xD;
		}&#xD;
&#xD;
// Calculate total amount across all policies&#xD;
		double totalAmount = 0;&#xD;
		for (String policyId : policyIds) {&#xD;
			Optional&lt;Policy> optPolicy = policyRepository.findById(policyId);&#xD;
			if (optPolicy.isPresent()) {&#xD;
				totalAmount += optPolicy.get().getMonthlyPremium();&#xD;
			} else {&#xD;
				log.warn(&quot;Policy not found for id: {}&quot;, policyId);&#xD;
			}&#xD;
		}&#xD;
&#xD;
		Payment payment = new Payment();&#xD;
		payment.setCustomerId(customerId);&#xD;
		payment.setAmount(totalAmount);&#xD;
		payment.setStatus(&quot;paidByAutopay&quot;);&#xD;
		payment.setRazorpayPaymentId(paymentId);&#xD;
// payment.setRazorpayOrderId(orderId);&#xD;
		payment.setRazorpaySubscriptionId(subscriptionId);&#xD;
		payment.setMethod(&quot;autopaid&quot;);&#xD;
		payment.setAutoPay(true);&#xD;
		payment.setPaidAt(new Date());&#xD;
		payment.setPolicyIds(policyIds);&#xD;
		payment.setPolicyNames(policyNames);&#xD;
		payment.setTaxDetails(new Payment.TaxDetails(&quot;GST&quot;, 0.18, totalAmount * 0.18, totalAmount * 1.18));&#xD;
&#xD;
		paymentRepository.save(payment);&#xD;
&#xD;
// Update Customer payment history for policies and send notifications&#xD;
		Optional&lt;Customer> optCustomer = customerRepository.findById(customerId);&#xD;
		if (optCustomer.isPresent()) {&#xD;
			Customer customer = optCustomer.get();&#xD;
			String toEmail = customer.getEmail();&#xD;
			String customerName = customer.getName();&#xD;
&#xD;
			for (int i = 0; i &lt; policyIds.size(); i++) {&#xD;
				String policyId = policyIds.get(i);&#xD;
				String policyName = (policyNames != null &amp;&amp; i &lt; policyNames.size()) ? policyNames.get(i) : &quot;&quot;;&#xD;
&#xD;
// Construct notification payload&#xD;
				Map&lt;String, Object> payload = new HashMap&lt;>();&#xD;
				payload.put(&quot;toEmail&quot;, toEmail);&#xD;
				payload.put(&quot;customerName&quot;, customerName);&#xD;
				payload.put(&quot;invoiceId&quot;, null); // autopay payments usually have no invoice&#xD;
				payload.put(&quot;policyName&quot;, policyName);&#xD;
				payload.put(&quot;status&quot;, &quot;SUCCESS&quot;);&#xD;
				payload.put(&quot;amount&quot;, totalAmount); // You may adjust to per policy amount if needed&#xD;
&#xD;
				try {&#xD;
					restTemplate.postForEntity(notificationBaseUrl + &quot;/payment-status&quot;, payload, String.class);&#xD;
&#xD;
					log.info(&quot;Sent autopay payment notification email for policy: {}&quot;, policyName);&#xD;
				} catch (Exception ex) {&#xD;
					log.error(&quot;Failed to send autopay payment notification for policy: {}&quot;, policyName, ex);&#xD;
				}&#xD;
			}&#xD;
		} else {&#xD;
			log.warn(&quot;Customer not found for id: {}&quot;, customerId);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1nMYHLIEfCMALJnZIqq0A" name="getCustomersWithExpiringPoliciesByDays" specification="_qZ0oQHLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_q1nMYXLIEfCMALJnZIqq0A" name="days">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1nMYnLIEfCMALJnZIqq0A" type="_qbbKwHLIEfCMALJnZIqq0A" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_q1nMY3LIEfCMALJnZIqq0A" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>Date now = new Date();&#xD;
		Calendar cal = Calendar.getInstance();&#xD;
		cal.setTime(now);&#xD;
		cal.add(Calendar.DAY_OF_YEAR, days);&#xD;
		Date rangeEnd = cal.getTime();&#xD;
&#xD;
		List&lt;Customer> allCustomers = customerRepository.findAll();&#xD;
		List&lt;Customer> filteredCustomers = new ArrayList&lt;>();&#xD;
&#xD;
		for (Customer customer : allCustomers) {&#xD;
			// Filter paymentHistories for policies expiring in next 'days'&#xD;
			List&lt;Customer.PaymentHistory> filteredPaymentHistory = customer.getPaymentHistory().stream()&#xD;
					.filter(entry -> {&#xD;
						Date validUpto = entry.getValidUpto();&#xD;
						if (validUpto == null)&#xD;
							return false;&#xD;
						// validUpto must be between now and rangeEnd (inclusive)&#xD;
						return !validUpto.before(now) &amp;&amp; !validUpto.after(rangeEnd);&#xD;
					}).collect(Collectors.toList());&#xD;
&#xD;
			if (!filteredPaymentHistory.isEmpty()) {&#xD;
				// Replace with filtered list&#xD;
				customer.setPaymentHistory(filteredPaymentHistory);&#xD;
				filteredCustomers.add(customer);&#xD;
			}&#xD;
		}&#xD;
		return filteredCustomers;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1nMZHLIEfCMALJnZIqq0A" name="findCustomersWithinDaysUntilExpiry" specification="_qZ3rkHLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_q1nMZXLIEfCMALJnZIqq0A" name="daysUntilExpiry">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1nMZnLIEfCMALJnZIqq0A" type="_qbbKwHLIEfCMALJnZIqq0A" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_q1nMZ3LIEfCMALJnZIqq0A" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>LocalDate today = LocalDate.now();&#xD;
		LocalDate expiryThresholdDate = today.plusDays(daysUntilExpiry);&#xD;
&#xD;
		Date todayDate = Date.from(today.atStartOfDay(ZoneId.systemDefault()).toInstant());&#xD;
		Date expiryThreshold = Date.from(expiryThresholdDate.atStartOfDay(ZoneId.systemDefault()).toInstant());&#xD;
&#xD;
		Query query = new Query();&#xD;
		query.addCriteria(Criteria.where(&quot;paymentHistory.validUpto&quot;).gte(todayDate) // validUpto >= today&#xD;
				.lte(expiryThreshold) // validUpto &lt;= today + daysUntilExpiry&#xD;
		);&#xD;
&#xD;
		List&lt;Customer> customers = mongoTemplate.find(query, Customer.class);&#xD;
		return customers;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1nzcHLIEfCMALJnZIqq0A" name="sendPolicyExpiryNotification" specification="_qZ5gwHLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_q1nzcXLIEfCMALJnZIqq0A" name="customerId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1nzcnLIEfCMALJnZIqq0A" name="policyId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>Optional&lt;Customer> optCustomer = customerRepository.findById(customerId);&#xD;
		if (optCustomer.isEmpty()) {&#xD;
			log.warn(&quot;Customer not found: {}&quot;, customerId);&#xD;
			return;&#xD;
		}&#xD;
		Customer customer = optCustomer.get();&#xD;
&#xD;
		Optional&lt;Customer.PaymentHistory> optHistory = customer.getPaymentHistory().stream()&#xD;
				.filter(h -> h.getPolicyId().equals(policyId)).findFirst();&#xD;
&#xD;
		if (optHistory.isEmpty() || optHistory.get().getValidUpto() == null) {&#xD;
			log.warn(&quot;Payment history or validUpto not found for customerId: {}, policyId: {}&quot;, customerId, policyId);&#xD;
			return;&#xD;
		}&#xD;
&#xD;
		String toEmail = customer.getEmail();&#xD;
		String expiryDateStr = optHistory.get().getValidUpto().toString();&#xD;
		// Fetch policy name&#xD;
		String policyName = null;&#xD;
		Optional&lt;Policy> policyOpt = policyRepository.findById(policyId);&#xD;
		if (policyOpt.isPresent()) {&#xD;
			policyName = policyOpt.get().getName();&#xD;
		}&#xD;
&#xD;
		Map&lt;String, String> payload = new HashMap&lt;>();&#xD;
		payload.put(&quot;toEmail&quot;, toEmail);&#xD;
		payload.put(&quot;policyId&quot;, policyId);&#xD;
		payload.put(&quot;policyName&quot;, policyName);&#xD;
		payload.put(&quot;expiryDate&quot;, expiryDateStr);&#xD;
&#xD;
		try {&#xD;
			restTemplate.postForEntity(notificationBaseUrl + &quot;/policy-expiry&quot;, payload, String.class);&#xD;
			log.info(&quot;Sent policy expiry notification request to Notification Microservice for {}, policy {}&quot;, toEmail,&#xD;
					policyId);&#xD;
		} catch (Exception e) {&#xD;
			log.error(&quot;Failed to send notification to Notification Microservice&quot;, e);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1nzc3LIEfCMALJnZIqq0A" name="getUnpaidInvoices" specification="_qZ7V8HLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_q1nzdHLIEfCMALJnZIqq0A" name="customerId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1nzdXLIEfCMALJnZIqq0A" type="_qbMhQHLIEfCMALJnZIqq0A" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_q1nzdnLIEfCMALJnZIqq0A" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>log.info(&quot;Fetching unpaid and failed invoices for customerId: {}&quot;, customerId);&#xD;
		// Assuming invoiceRepository supports findByCustomerIdAndStatusIn&#xD;
		List&lt;String> statuses = List.of(&quot;unpaid&quot;, &quot;failed&quot;);&#xD;
		return invoiceRepository.findByCustomerIdAndStatusIn(customerId, statuses);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1nzd3LIEfCMALJnZIqq0A" name="processPayment" specification="_qZ9LIHLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_q1nzeHLIEfCMALJnZIqq0A" name="razorpayOrderId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1nzeXLIEfCMALJnZIqq0A" name="razorpayPaymentId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1nzenLIEfCMALJnZIqq0A" name="status">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>processPayment(razorpayOrderId, razorpayPaymentId, status, null);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1oagHLIEfCMALJnZIqq0A" name="processPayment" specification="_qaA1gHLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_q1oagXLIEfCMALJnZIqq0A" name="razorpayOrderId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1oagnLIEfCMALJnZIqq0A" name="razorpayPaymentId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1oag3LIEfCMALJnZIqq0A" name="status">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1oahHLIEfCMALJnZIqq0A" name="subscriptionId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>log.info(&quot;Starting processPayment - OrderID: {}, PaymentID: {}, Status: {}, SubscriptionID: {}&quot;,&#xD;
				razorpayOrderId, razorpayPaymentId, status, subscriptionId);&#xD;
&#xD;
		if (subscriptionId != null &amp;&amp; !subscriptionId.isEmpty()) {&#xD;
			// AutoPay subscription payment handling&#xD;
			try {&#xD;
				RazorpayClient razorpay = new RazorpayClient(keyId, keySecret);&#xD;
				Subscription subscription = razorpay.subscriptions.fetch(subscriptionId);&#xD;
				JSONObject notes = subscription.get(&quot;notes&quot;);&#xD;
				String customerId = notes.optString(&quot;customerId&quot;);&#xD;
				String policyId = notes.optString(&quot;policyId&quot;);&#xD;
&#xD;
				if (customerId.isEmpty() || policyId.isEmpty()) {&#xD;
					throw new RuntimeException(&quot;Subscription notes missing required customerId or policyId&quot;);&#xD;
				}&#xD;
&#xD;
				Optional&lt;Policy> optPolicy = policyRepository.findById(policyId);&#xD;
				if (optPolicy.isEmpty())&#xD;
					throw new RuntimeException(&quot;Policy not found&quot;);&#xD;
				Policy policy = optPolicy.get();&#xD;
&#xD;
				double monthlyAmount = policy.getMonthlyPremium();&#xD;
&#xD;
				// Create Payment record for autopay&#xD;
				Payment payment = new Payment();&#xD;
				payment.setCustomerId(customerId);&#xD;
				payment.setInvoiceId(null); // autopay payments have no invoice&#xD;
				payment.setInsurerId(policy.getInsurerId());&#xD;
				payment.setAmount(monthlyAmount);&#xD;
				payment.setStatus(&quot;paidByAutopay&quot;);&#xD;
				payment.setRazorpayPaymentId(razorpayPaymentId);&#xD;
				payment.setRazorpaySubscriptionId(subscriptionId);&#xD;
				payment.setMethod(&quot;autopaid&quot;);&#xD;
				payment.setAutoPay(true);&#xD;
				payment.setTaxDetails(new Payment.TaxDetails(&quot;GST&quot;, 0.18, monthlyAmount * 0.18, monthlyAmount * 1.18));&#xD;
				payment.setPaidAt(new Date());&#xD;
&#xD;
				paymentRepository.save(payment);&#xD;
				log.info(&quot;Saved autopay payment for policyId {}&quot;, policyId);&#xD;
&#xD;
				try {&#xD;
					String statusForNotify = &quot;SUCCESS&quot;;&#xD;
					if (!&quot;paidByAutopay&quot;.equals(payment.getStatus()) &amp;&amp; !&quot;paid&quot;.equals(payment.getStatus())) {&#xD;
						statusForNotify = &quot;FAILED&quot;;&#xD;
					}&#xD;
					sendPaymentStatusNotification(payment.getCustomerId(), policy.getName(), null, statusForNotify,&#xD;
							payment.getAmount());&#xD;
				} catch (Exception ex) {&#xD;
					log.error(&quot;Failed to send payment status notification&quot;, ex);&#xD;
				}&#xD;
&#xD;
				// Update customer's payment history for this policy&#xD;
				Optional&lt;Customer> optCustomer = customerRepository.findById(customerId);&#xD;
				if (optCustomer.isPresent()) {&#xD;
					Customer customer = optCustomer.get();&#xD;
					Optional&lt;Customer.PaymentHistory> optHistory = customer.getPaymentHistory().stream()&#xD;
							.filter(h -> h.getPolicyId().equals(policyId)).findFirst();&#xD;
&#xD;
					Customer.PaymentHistory history = optHistory.orElseGet(() -> {&#xD;
						Customer.PaymentHistory newHistory = new Customer.PaymentHistory();&#xD;
						newHistory.setPolicyId(policyId);&#xD;
						customer.getPaymentHistory().add(newHistory);&#xD;
						log.info(&quot;Created new payment history entry for policy {}&quot;, policyId);&#xD;
						return newHistory;&#xD;
					});&#xD;
&#xD;
					history.setStatus(&quot;paidByAutopay&quot;);&#xD;
					Date now = new Date();&#xD;
					history.setLastPaidDate(now);&#xD;
&#xD;
					Calendar cal = Calendar.getInstance();&#xD;
					cal.setTime(history.getValidUpto() != null ? history.getValidUpto() : now);&#xD;
					cal.add(Calendar.MONTH, 1); // extend by 1 month for autopay payment&#xD;
					history.setValidUpto(cal.getTime());&#xD;
&#xD;
					customer.setAutoPayEnabled(true);&#xD;
					customerRepository.save(customer);&#xD;
					log.info(&quot;Updated customer payment history and autopay status&quot;);&#xD;
				} else {&#xD;
					log.error(&quot;Customer not found for auto pay update: {}&quot;, customerId);&#xD;
				}&#xD;
			} catch (RazorpayException e) {&#xD;
				log.error(&quot;Error during autopay subscription fetch&quot;, e);&#xD;
				throw new RuntimeException(&quot;Failed to process autopay payment: &quot; + e.getMessage());&#xD;
			}&#xD;
		} else {&#xD;
			// One-time payment logic with invoice&#xD;
			String trimmedOrderId = razorpayOrderId.trim();&#xD;
			Optional&lt;Invoice> optInvoice = invoiceRepository.findByRazorpayOrderId(trimmedOrderId);&#xD;
&#xD;
			if (optInvoice.isEmpty()) {&#xD;
				log.error(&quot;Invoice not found for orderId: {}&quot;, trimmedOrderId);&#xD;
				throw new RuntimeException(&quot;Invoice not found for order id: &quot; + trimmedOrderId);&#xD;
			}&#xD;
&#xD;
			Invoice invoice = optInvoice.get();&#xD;
			String finalStatus = status;&#xD;
			if (subscriptionId != null &amp;&amp; !subscriptionId.isEmpty() &amp;&amp; &quot;paid&quot;.equals(status)) {&#xD;
				finalStatus = &quot;paidByAutopay&quot;;&#xD;
			}&#xD;
&#xD;
			invoice.setStatus(finalStatus);&#xD;
			invoiceRepository.save(invoice);&#xD;
			log.info(&quot;Updated invoice {} status to {}&quot;, invoice.getId(), finalStatus);&#xD;
&#xD;
			Payment payment = new Payment();&#xD;
			payment.setInvoiceId(invoice.getId());&#xD;
			payment.setCustomerId(invoice.getCustomerId());&#xD;
			payment.setInsurerId(invoice.getInsurerId());&#xD;
			payment.setAmount(invoice.getAmount());&#xD;
			payment.setStatus(finalStatus);&#xD;
			payment.setRazorpayPaymentId(razorpayPaymentId);&#xD;
			payment.setRazorpaySubscriptionId(subscriptionId != null ? subscriptionId : &quot;&quot;);&#xD;
			payment.setMethod(&quot;razorpay&quot;);&#xD;
			payment.setAutoPay(subscriptionId != null &amp;&amp; !subscriptionId.isEmpty());&#xD;
&#xD;
			if (!invoice.getTaxDetailsList().isEmpty()) {&#xD;
				Invoice.TaxDetails taxDetails = invoice.getTaxDetailsList().get(0);&#xD;
				Payment.TaxDetails paymentTax = new Payment.TaxDetails();&#xD;
				paymentTax.setTaxType(&quot;GST&quot;);&#xD;
				paymentTax.setTaxRate(taxDetails.getGstRate());&#xD;
				paymentTax.setTaxAmount(taxDetails.getTaxAmount());&#xD;
				paymentTax.setTotalAmount(taxDetails.getTotalAmount());&#xD;
				payment.setTaxDetails(paymentTax);&#xD;
			}&#xD;
&#xD;
			payment.setPaidAt(new Date());&#xD;
			paymentRepository.save(payment);&#xD;
			log.info(&quot;Saved payment for invoice {}&quot;, invoice.getId());&#xD;
&#xD;
			try {&#xD;
				String statusForNotify = &quot;SUCCESS&quot;;&#xD;
				if (!&quot;paid&quot;.equals(payment.getStatus())) {&#xD;
					statusForNotify = &quot;FAILED&quot;;&#xD;
				}&#xD;
				sendPaymentStatusNotification(payment.getCustomerId(), null, invoice.getId(), statusForNotify,&#xD;
						payment.getAmount());&#xD;
			} catch (Exception ex) {&#xD;
				log.error(&quot;Failed to send payment status notification&quot;, ex);&#xD;
			}&#xD;
&#xD;
			// Update customer's payment history by policy&#xD;
			Optional&lt;Customer> optCustomer = customerRepository.findById(invoice.getCustomerId());&#xD;
			if (optCustomer.isEmpty()) {&#xD;
				log.error(&quot;Customer not found for id: {}&quot;, invoice.getCustomerId());&#xD;
				throw new RuntimeException(&quot;Customer not found&quot;);&#xD;
			}&#xD;
			Customer customer = optCustomer.get();&#xD;
&#xD;
			for (String policyId : invoice.getPolicyIds()) {&#xD;
				Optional&lt;Customer.PaymentHistory> optHistory = customer.getPaymentHistory().stream()&#xD;
						.filter(h -> h.getPolicyId().equals(policyId)).findFirst();&#xD;
&#xD;
				Customer.PaymentHistory history = optHistory.orElseGet(() -> {&#xD;
					Customer.PaymentHistory newHistory = new Customer.PaymentHistory();&#xD;
					newHistory.setPolicyId(policyId);&#xD;
					customer.getPaymentHistory().add(newHistory);&#xD;
					log.info(&quot;Created new payment history entry for policy {}&quot;, policyId);&#xD;
					return newHistory;&#xD;
				});&#xD;
&#xD;
				history.setStatus(finalStatus);&#xD;
				Date now = new Date();&#xD;
				history.setLastPaidDate(now);&#xD;
&#xD;
				if (&quot;paid&quot;.equals(status) || &quot;paidByAutopay&quot;.equals(finalStatus)) {&#xD;
					Calendar cal = Calendar.getInstance();&#xD;
					cal.setTime(now);&#xD;
					cal.add(Calendar.MONTH, invoice.getMonths());&#xD;
					history.setValidUpto(cal.getTime());&#xD;
					log.info(&quot;Extended validUpto for policy {} to {}&quot;, policyId, history.getValidUpto());&#xD;
				}&#xD;
			}&#xD;
&#xD;
			customerRepository.save(customer);&#xD;
			log.info(&quot;Updated customer {} payment history&quot;, customer.getId());&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1oahXLIEfCMALJnZIqq0A" name="getPaymentHistory" specification="_qaD40HLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_q1oahnLIEfCMALJnZIqq0A" name="customerId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1oah3LIEfCMALJnZIqq0A" type="_qbCwQHLIEfCMALJnZIqq0A" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_q1oaiHLIEfCMALJnZIqq0A" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>log.info(&quot;Fetching payment history for customerId: {}&quot;, customerId);&#xD;
		Sort sort = Sort.by(Sort.Direction.DESC, &quot;paidAt&quot;);&#xD;
		List&lt;Payment> payments = paymentRepository.findByCustomerId(customerId, sort);&#xD;
		if (payments.isEmpty()) {&#xD;
			log.warn(&quot;No payment records found for customerId: {}&quot;, customerId);&#xD;
		}&#xD;
		return payments;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1pBkHLIEfCMALJnZIqq0A" name="getInvoiceById" specification="_qaG8IHLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_q1pBkXLIEfCMALJnZIqq0A" name="invoiceId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1pBknLIEfCMALJnZIqq0A" type="_qy0XEHLIEfCMALJnZIqq0A" direction="return"/>
                <language>java</language>
                <body>return invoiceRepository.findById(invoiceId);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1pBk3LIEfCMALJnZIqq0A" name="getPolicyNamesByIds" specification="_q0Uy8HLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_q1pBlHLIEfCMALJnZIqq0A" name="policyIds" type="_qyxTwHLIEfCMALJnZIqq0A"/>
                <ownedParameter xmi:id="_q1pBlXLIEfCMALJnZIqq0A" isOrdered="true" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_q1pBlnLIEfCMALJnZIqq0A" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>log.info(&quot;Fetching policy names for IDs: {}&quot;, policyIds);&#xD;
		List&lt;Policy> policies = policyRepository.findAllByIdIn(policyIds);&#xD;
		return policies.stream().map(Policy::getName).collect(Collectors.toList());&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1pBl3LIEfCMALJnZIqq0A" name="enableAutoPay" specification="_qaLNkHLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_q1pBmHLIEfCMALJnZIqq0A" name="customerId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1pBmXLIEfCMALJnZIqq0A" name="invoiceId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1pBmnLIEfCMALJnZIqq0A" name="months">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1pBm3LIEfCMALJnZIqq0A" name="amount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1pBnHLIEfCMALJnZIqq0A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>log.info(&quot;Enabling autopay for customerId: {}, invoiceId: {}&quot;, customerId, invoiceId);&#xD;
		try {&#xD;
			RazorpayClient razorpay = new RazorpayClient(keyId, keySecret);&#xD;
&#xD;
			JSONObject subRequest = new JSONObject();&#xD;
			subRequest.put(&quot;plan_id&quot;, planId);&#xD;
			subRequest.put(&quot;total_count&quot;, months);&#xD;
			subRequest.put(&quot;quantity&quot;, 1);&#xD;
			subRequest.put(&quot;customer_notify&quot;, 1);&#xD;
			subRequest.put(&quot;notes&quot;, new JSONObject().put(&quot;customerId&quot;, customerId).put(&quot;invoiceId&quot;, invoiceId));&#xD;
&#xD;
			Subscription subscription = razorpay.subscriptions.create(subRequest);&#xD;
			String subscriptionId = subscription.get(&quot;id&quot;);&#xD;
&#xD;
			Optional&lt;Customer> optCustomer = customerRepository.findById(customerId);&#xD;
			if (optCustomer.isPresent()) {&#xD;
				Customer customer = optCustomer.get();&#xD;
				customer.setAutoPayEnabled(true);&#xD;
				customerRepository.save(customer);&#xD;
			}&#xD;
&#xD;
			Optional&lt;Invoice> optInvoice = invoiceRepository.findById(invoiceId);&#xD;
			if (optInvoice.isPresent()) {&#xD;
				Invoice invoice = optInvoice.get();&#xD;
				invoice.setRazorpaySubscriptionId(subscriptionId);&#xD;
				invoiceRepository.save(invoice);&#xD;
			}&#xD;
			log.info(&quot;Autopay enabled with subscriptionId: {}&quot;, subscriptionId);&#xD;
			return subscriptionId;&#xD;
&#xD;
		} catch (Exception e) {&#xD;
			log.error(&quot;Error enabling autopay&quot;, e);&#xD;
			throw new RuntimeException(&quot;Failed to enable autopay&quot;);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1pooHLIEfCMALJnZIqq0A" name="findExistingRazorpayId" specification="_qaPfAHLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_q1pooXLIEfCMALJnZIqq0A" name="email">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1poonLIEfCMALJnZIqq0A" name="phone">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1poo3LIEfCMALJnZIqq0A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>log.warn(&quot;Searching Razorpay customer for email {} or phone {}&quot;, email, phone);&#xD;
&#xD;
		try {&#xD;
			int count = 100;&#xD;
			int skip = 0;&#xD;
			String auth = Base64.getEncoder()&#xD;
					.encodeToString((keyId + &quot;:&quot; + keySecret).getBytes(StandardCharsets.UTF_8));&#xD;
&#xD;
			HttpHeaders headers = new HttpHeaders();&#xD;
			headers.set(&quot;Authorization&quot;, &quot;Basic &quot; + auth);&#xD;
			headers.setAccept(Collections.singletonList(MediaType.APPLICATION_JSON));&#xD;
&#xD;
			boolean hasMore = true;&#xD;
			while (hasMore) {&#xD;
				String url = String.format(&quot;https://api.razorpay.com/v1/customers?count=%d&amp;skip=%d&quot;, count, skip);&#xD;
				HttpEntity&lt;String> entity = new HttpEntity&lt;>(headers);&#xD;
&#xD;
				ResponseEntity&lt;String> response = restTemplate.exchange(url, HttpMethod.GET, entity, String.class);&#xD;
&#xD;
				if (!response.getStatusCode().is2xxSuccessful()) {&#xD;
					log.error(&quot;Failed to list Razorpay customers, HTTP status: {}&quot;, response.getStatusCodeValue());&#xD;
					return null;&#xD;
				}&#xD;
&#xD;
				JSONObject json = new JSONObject(response.getBody());&#xD;
				JSONArray items = json.getJSONArray(&quot;items&quot;);&#xD;
&#xD;
				for (int i = 0; i &lt; items.length(); i++) {&#xD;
					JSONObject cust = items.getJSONObject(i);&#xD;
					String custEmail = cust.optString(&quot;email&quot;, &quot;&quot;);&#xD;
					String custContact = cust.optString(&quot;contact&quot;, &quot;&quot;).replaceAll(&quot;\\s+&quot;, &quot;&quot;);&#xD;
&#xD;
					if ((email != null &amp;&amp; email.equalsIgnoreCase(custEmail))&#xD;
							|| (phone != null &amp;&amp; phone.replaceAll(&quot;\\s+&quot;, &quot;&quot;).equals(custContact))) {&#xD;
						String customerId = cust.getString(&quot;id&quot;);&#xD;
						log.info(&quot;Found existing Razorpay customer id: {}&quot;, customerId);&#xD;
						return customerId;&#xD;
					}&#xD;
				}&#xD;
&#xD;
				hasMore = items.length() == count;&#xD;
				skip += count;&#xD;
			}&#xD;
		} catch (Exception ex) {&#xD;
			log.error(&quot;Error searching for existing Razorpay customer: &quot;, ex);&#xD;
		}&#xD;
		return null;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1popHLIEfCMALJnZIqq0A" name="enableAutoPayPolicy" specification="_qaR7QHLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_q1popXLIEfCMALJnZIqq0A" name="customerId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1popnLIEfCMALJnZIqq0A" name="policyId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1pop3LIEfCMALJnZIqq0A" name="months">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1poqHLIEfCMALJnZIqq0A" name="amount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1qPsHLIEfCMALJnZIqq0A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>log.info(&quot;Enabling autopay for customerId: {}, policyId: {}, months: {}, amount: {}&quot;, customerId, policyId,&#xD;
				months, amount);&#xD;
&#xD;
		try {&#xD;
			Optional&lt;Policy> optPolicy = policyRepository.findById(policyId);&#xD;
			if (optPolicy.isEmpty())&#xD;
				throw new RuntimeException(&quot;Policy not found for id: &quot; + policyId);&#xD;
			Policy policy = optPolicy.get();&#xD;
&#xD;
			Optional&lt;Customer> optCustomer = customerRepository.findById(customerId);&#xD;
			if (optCustomer.isEmpty())&#xD;
				throw new RuntimeException(&quot;Customer not found for id: &quot; + customerId);&#xD;
			Customer customer = optCustomer.get();&#xD;
&#xD;
			// Find or create PaymentHistory for this policy&#xD;
			Optional&lt;Customer.PaymentHistory> optHistory = customer.getPaymentHistory().stream()&#xD;
					.filter(h -> h.getPolicyId().equals(policyId)).findFirst();&#xD;
&#xD;
			RazorpayClient razorpay = new RazorpayClient(keyId, keySecret);&#xD;
&#xD;
			String razorpayCustomerId = customer.getRazorpayCustomerId();&#xD;
			if (razorpayCustomerId == null || razorpayCustomerId.isEmpty()) {&#xD;
				JSONObject customerRequest = new JSONObject();&#xD;
				customerRequest.put(&quot;name&quot;, customer.getName() != null ? customer.getName() : &quot;Customer&quot;);&#xD;
				customerRequest.put(&quot;email&quot;, customer.getEmail());&#xD;
				String contactNum = customer.getPhone();&#xD;
				if (!contactNum.startsWith(&quot;+&quot;)) {&#xD;
					contactNum = &quot;+&quot; + contactNum;&#xD;
				}&#xD;
				customerRequest.put(&quot;contact&quot;, contactNum);&#xD;
&#xD;
				try {&#xD;
					com.razorpay.Customer newCustomer = razorpay.customers.create(customerRequest);&#xD;
					razorpayCustomerId = newCustomer.get(&quot;id&quot;);&#xD;
					log.info(&quot;Created new Razorpay customer with id {}&quot;, razorpayCustomerId);&#xD;
				} catch (RazorpayException e) {&#xD;
					if (e.getMessage() != null &amp;&amp; e.getMessage().contains(&quot;already exists&quot;)) {&#xD;
						log.warn(&quot;Customer exists on Razorpay, attempting to find existing customer id&quot;);&#xD;
						razorpayCustomerId = findExistingRazorpayId(customer.getEmail(), customer.getPhone());&#xD;
						if (razorpayCustomerId == null) {&#xD;
							throw new RuntimeException(&quot;Failed to get existing Razorpay customer id: &quot; + e.getMessage(),&#xD;
									e);&#xD;
						}&#xD;
						log.info(&quot;Using existing Razorpay customer id: {}&quot;, razorpayCustomerId);&#xD;
					} else {&#xD;
						throw e;&#xD;
					}&#xD;
				}&#xD;
				customer.setRazorpayCustomerId(razorpayCustomerId);&#xD;
				customerRepository.save(customer);&#xD;
&#xD;
			} else {&#xD;
				log.info(&quot;Using existing Razorpay Customer ID: {}&quot;, razorpayCustomerId);&#xD;
			}&#xD;
&#xD;
			// Prepare subscription creation payload&#xD;
			JSONObject subRequest = new JSONObject();&#xD;
			subRequest.put(&quot;plan_id&quot;, planId); // Your configured plan ID&#xD;
			subRequest.put(&quot;total_count&quot;, months);&#xD;
			subRequest.put(&quot;quantity&quot;, 1);&#xD;
			subRequest.put(&quot;customer_notify&quot;, 1);&#xD;
			subRequest.put(&quot;customer_id&quot;, razorpayCustomerId);&#xD;
			subRequest.put(&quot;notes&quot;, new JSONObject().put(&quot;customerId&quot;, customerId).put(&quot;policyId&quot;, policyId));&#xD;
&#xD;
			Subscription subscription = razorpay.subscriptions.create(subRequest);&#xD;
			String subscriptionId = subscription.get(&quot;id&quot;);&#xD;
&#xD;
			// Update global autopay flag (optional)&#xD;
			customer.setAutoPayEnabled(true);&#xD;
&#xD;
			Customer.PaymentHistory history = optHistory.orElseGet(() -> {&#xD;
				Customer.PaymentHistory newHistory = new Customer.PaymentHistory();&#xD;
				newHistory.setPolicyId(policyId);&#xD;
				customer.getPaymentHistory().add(newHistory);&#xD;
				log.info(&quot;Created new payment history entry for policy {}&quot;, policyId);&#xD;
				return newHistory;&#xD;
			});&#xD;
&#xD;
			// Update payment history for autopay subscription&#xD;
			history.setStatus(&quot;paidByAutopayActive&quot;);&#xD;
			history.setRazorpaySubscriptionId(subscriptionId);&#xD;
			// Optional: if you added autopayEnabled boolean field in PaymentHistory, set it&#xD;
			// here&#xD;
			// history.setAutopayEnabled(true);&#xD;
&#xD;
			customerRepository.save(customer);&#xD;
&#xD;
			// Send notification to customer on autopay enablement&#xD;
			sendAutoPayNotification(customer.getEmail(), policyId, true);&#xD;
&#xD;
			log.info(&quot;Autopay enabled with subscriptionId: {}&quot;, subscriptionId);&#xD;
			return subscriptionId;&#xD;
&#xD;
		} catch (Exception e) {&#xD;
			log.error(&quot;Error enabling autopay for policy: {}&quot;, e.getMessage(), e);&#xD;
			throw new RuntimeException(&quot;Failed to enable autopay: &quot; + e.getMessage());&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1qPsXLIEfCMALJnZIqq0A" name="disableAutoPay" specification="_qaVloHLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_q1qPsnLIEfCMALJnZIqq0A" name="customerId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1qPs3LIEfCMALJnZIqq0A" name="subscriptionId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>disableAutoPay(customerId, subscriptionId, null);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1q2wHLIEfCMALJnZIqq0A" name="disableAutoPay" specification="_qaXa0HLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_q1q2wXLIEfCMALJnZIqq0A" name="customerId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1q2wnLIEfCMALJnZIqq0A" name="subscriptionId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1q2w3LIEfCMALJnZIqq0A" name="policyId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>log.info(&quot;Disabling autopay for customerId: {}, subscriptionId: {}, policyId: {}&quot;, customerId, subscriptionId,&#xD;
				policyId);&#xD;
		try {&#xD;
			RazorpayClient razorpay = new RazorpayClient(keyId, keySecret);&#xD;
			JSONObject cancelOptions = new JSONObject();&#xD;
			cancelOptions.put(&quot;cancel_at_cycle_end&quot;, 0); // immediate cancel&#xD;
			razorpay.subscriptions.cancel(subscriptionId, cancelOptions);&#xD;
&#xD;
			Optional&lt;Customer> optCustomer = customerRepository.findById(customerId);&#xD;
			if (optCustomer.isPresent()) {&#xD;
				Customer customer = optCustomer.get();&#xD;
				customer.setAutoPayEnabled(false); // global flag&#xD;
&#xD;
				if (policyId != null) {&#xD;
					Optional&lt;Customer.PaymentHistory> optHistory = customer.getPaymentHistory().stream()&#xD;
							.filter(h -> policyId.equals(h.getPolicyId())).findFirst();&#xD;
					if (optHistory.isPresent()) {&#xD;
						Customer.PaymentHistory history = optHistory.get();&#xD;
						history.setStatus(&quot;paidByAutopayInActive&quot;);&#xD;
					}&#xD;
					sendAutoPayNotification(customer.getEmail(), policyId, false);&#xD;
				}&#xD;
				customerRepository.save(customer);&#xD;
			} else {&#xD;
				log.warn(&quot;Customer not found for id: {}&quot;, customerId);&#xD;
			}&#xD;
			log.info(&quot;Autopay disabled successfully (subscriptionId: {})&quot;, subscriptionId);&#xD;
		} catch (Exception e) {&#xD;
			log.error(&quot;Error disabling autopay&quot;, e);&#xD;
			throw new RuntimeException(&quot;Failed to disable autopay: &quot; + e.getMessage());&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1rd0HLIEfCMALJnZIqq0A" name="getOwnedPolicies" specification="_qaYo8nLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_q1rd0XLIEfCMALJnZIqq0A" name="customerId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1rd0nLIEfCMALJnZIqq0A" type="_qa6NYHLIEfCMALJnZIqq0A" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_q1rd03LIEfCMALJnZIqq0A" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>log.info(&quot;Fetching owned policies for customerId: {}&quot;, customerId);&#xD;
		Optional&lt;Customer> optCustomer = customerRepository.findById(customerId);&#xD;
		if (optCustomer.isEmpty()) {&#xD;
			throw new RuntimeException(&quot;Customer not found&quot;);&#xD;
		}&#xD;
		List&lt;String> policyIds = optCustomer.get().getPolicyIds();&#xD;
		return policyRepository.findAllByIdIn(policyIds);&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1sE4HLIEfCMALJnZIqq0A" name="sendAutoPayNotification" specification="_qaaeIHLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_q1sE4XLIEfCMALJnZIqq0A" name="toEmail">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1sE4nLIEfCMALJnZIqq0A" name="policyId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1sE43LIEfCMALJnZIqq0A" name="enabled">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>// Fetch policy name&#xD;
		String policyName = null;&#xD;
		Optional&lt;Policy> policyOpt = policyRepository.findById(policyId);&#xD;
		if (policyOpt.isPresent()) {&#xD;
			policyName = policyOpt.get().getName();&#xD;
		}&#xD;
		Map&lt;String, Object> payload = new HashMap&lt;>();&#xD;
		payload.put(&quot;toEmail&quot;, toEmail);&#xD;
		payload.put(&quot;policyId&quot;, policyId);&#xD;
		payload.put(&quot;policyName&quot;, policyName);&#xD;
		payload.put(&quot;enabled&quot;, enabled);&#xD;
&#xD;
		try {&#xD;
			restTemplate.postForEntity(notificationBaseUrl + &quot;/autopay-status&quot;, payload, String.class);&#xD;
			log.info(&quot;Sent autopay {} notification for policy {}&quot;, enabled ? &quot;ENABLED&quot; : &quot;DISABLED&quot;, policyId);&#xD;
		} catch (Exception ex) {&#xD;
			log.error(&quot;Failed to send autopay {} notification&quot;, enabled ? &quot;enabled&quot; : &quot;disabled&quot;, ex);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1sE5HLIEfCMALJnZIqq0A" name="sendPaymentStatusNotification" specification="_q0XPMXLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_q1sE5XLIEfCMALJnZIqq0A" name="customerId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1sE5nLIEfCMALJnZIqq0A" name="customerName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1sE53LIEfCMALJnZIqq0A" name="invoiceId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1sE6HLIEfCMALJnZIqq0A" name="status">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q1sE6XLIEfCMALJnZIqq0A" name="amount" type="_q0WoIHLIEfCMALJnZIqq0A"/>
                <language>java</language>
                <body>try {&#xD;
			Optional&lt;Customer> optCustomer = customerRepository.findById(customerId);&#xD;
			if (optCustomer.isEmpty()) {&#xD;
				log.warn(&quot;Customer not found for payment notification: {}&quot;, customerId);&#xD;
				return;&#xD;
			}&#xD;
			String toEmail = optCustomer.get().getEmail();&#xD;
&#xD;
			Map&lt;String, Object> payload = new HashMap&lt;>();&#xD;
			payload.put(&quot;toEmail&quot;, toEmail);&#xD;
			payload.put(&quot;customerName&quot;, customerName);&#xD;
			payload.put(&quot;invoiceId&quot;, invoiceId);&#xD;
			payload.put(&quot;status&quot;, status);&#xD;
			payload.put(&quot;amount&quot;, amount);&#xD;
&#xD;
			log.info(&quot;Attempting to send payment notification to {} with payload: {}&quot;, toEmail, payload);&#xD;
&#xD;
			// Make REST call to Notification Microservice endpoint /payment-status&#xD;
			String url = notificationBaseUrl + &quot;/payment-status&quot;;&#xD;
			String response = restTemplate.postForObject(url, payload, String.class);&#xD;
&#xD;
			log.info(&quot;Payment status notification sent, response: {}&quot;, response);&#xD;
		} catch (Exception e) {&#xD;
			log.error(&quot;Error sending payment status notification&quot;, e);&#xD;
		}&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_qZ0oQHLIEfCMALJnZIqq0A" name="getCustomersWithExpiringPoliciesByDays" method="_q1nMYHLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_qZ1PUHLIEfCMALJnZIqq0A" name="days">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qZ1PUXLIEfCMALJnZIqq0A" type="_qbbKwHLIEfCMALJnZIqq0A" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qZ12YHLIEfCMALJnZIqq0A" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qZ3rkHLIEfCMALJnZIqq0A" name="findCustomersWithinDaysUntilExpiry" method="_q1nMZHLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_qZ3rkXLIEfCMALJnZIqq0A" name="daysUntilExpiry">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qZ4SoHLIEfCMALJnZIqq0A" type="_qbbKwHLIEfCMALJnZIqq0A" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qZ4SoXLIEfCMALJnZIqq0A" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qZ5gwHLIEfCMALJnZIqq0A" name="sendPolicyExpiryNotification" method="_q1nzcHLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_qZ6H0HLIEfCMALJnZIqq0A" name="customerId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qZ6H0XLIEfCMALJnZIqq0A" name="policyId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qZ7V8HLIEfCMALJnZIqq0A" name="getUnpaidInvoices" method="_q1nzc3LIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_qZ7V8XLIEfCMALJnZIqq0A" name="customerId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qZ7V8nLIEfCMALJnZIqq0A" type="_qbMhQHLIEfCMALJnZIqq0A" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qZ79AHLIEfCMALJnZIqq0A" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qZ9LIHLIEfCMALJnZIqq0A" name="processPayment" method="_q1nzd3LIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_qZ9yMHLIEfCMALJnZIqq0A" name="razorpayOrderId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qZ9yMXLIEfCMALJnZIqq0A" name="razorpayPaymentId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qZ9yMnLIEfCMALJnZIqq0A" name="status">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qaA1gHLIEfCMALJnZIqq0A" name="processPayment" method="_q1oagHLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_qaA1gXLIEfCMALJnZIqq0A" name="razorpayOrderId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qaBckHLIEfCMALJnZIqq0A" name="razorpayPaymentId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qaBckXLIEfCMALJnZIqq0A" name="status">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qaBcknLIEfCMALJnZIqq0A" name="subscriptionId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qaD40HLIEfCMALJnZIqq0A" name="getPaymentHistory" method="_q1oahXLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_qaEf4HLIEfCMALJnZIqq0A" name="customerId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qaFG8HLIEfCMALJnZIqq0A" type="_qbCwQHLIEfCMALJnZIqq0A" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qaFG8XLIEfCMALJnZIqq0A" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qaG8IHLIEfCMALJnZIqq0A" name="getInvoiceById" method="_q1pBkHLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_qaG8IXLIEfCMALJnZIqq0A" name="invoiceId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q0UL4XLIEfCMALJnZIqq0A" type="_qy0XEHLIEfCMALJnZIqq0A" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_qaLNkHLIEfCMALJnZIqq0A" name="enableAutoPay" method="_q1pBl3LIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_qaL0oHLIEfCMALJnZIqq0A" name="customerId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qaL0oXLIEfCMALJnZIqq0A" name="invoiceId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qaMbsHLIEfCMALJnZIqq0A" name="months">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qaMbsXLIEfCMALJnZIqq0A" name="amount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qaNCwHLIEfCMALJnZIqq0A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qaPfAHLIEfCMALJnZIqq0A" name="findExistingRazorpayId" visibility="private" method="_q1pooHLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_qaPfAXLIEfCMALJnZIqq0A" name="email">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qaPfAnLIEfCMALJnZIqq0A" name="phone">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qaQGEHLIEfCMALJnZIqq0A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qaR7QHLIEfCMALJnZIqq0A" name="enableAutoPayPolicy" method="_q1popHLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_qaR7QXLIEfCMALJnZIqq0A" name="customerId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qaSiUHLIEfCMALJnZIqq0A" name="policyId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qaSiUXLIEfCMALJnZIqq0A" name="months">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qaSiUnLIEfCMALJnZIqq0A" name="amount">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qaTJYHLIEfCMALJnZIqq0A" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qaVloHLIEfCMALJnZIqq0A" name="disableAutoPay" method="_q1qPsXLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_qaWMsHLIEfCMALJnZIqq0A" name="customerId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qaWMsXLIEfCMALJnZIqq0A" name="subscriptionId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qaXa0HLIEfCMALJnZIqq0A" name="disableAutoPay" method="_q1q2wHLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_qaXa0XLIEfCMALJnZIqq0A" name="customerId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qaYB4HLIEfCMALJnZIqq0A" name="subscriptionId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qaYB4XLIEfCMALJnZIqq0A" name="policyId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qaYo8nLIEfCMALJnZIqq0A" name="getOwnedPolicies" method="_q1rd0HLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_qaZQAHLIEfCMALJnZIqq0A" name="customerId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qaZQAXLIEfCMALJnZIqq0A" type="_qa6NYHLIEfCMALJnZIqq0A" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qaZQAnLIEfCMALJnZIqq0A" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_qaaeIHLIEfCMALJnZIqq0A" name="sendAutoPayNotification" visibility="private" method="_q1sE4HLIEfCMALJnZIqq0A">
                <ownedComment xmi:id="_q1yylHLIEfCMALJnZIqq0A">
                  <body>Helper method to send autopay enable/disable notification</body>
                </ownedComment>
                <ownedParameter xmi:id="_qabFMHLIEfCMALJnZIqq0A" name="toEmail">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qabFMXLIEfCMALJnZIqq0A" name="policyId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_qabFMnLIEfCMALJnZIqq0A" name="enabled">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_q0SWsHLIEfCMALJnZIqq0A" name="recordAutopayPayment" method="_q1mlUHLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_q0SWsXLIEfCMALJnZIqq0A" name="customerId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q0S9wHLIEfCMALJnZIqq0A" name="subscriptionId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q0S9wXLIEfCMALJnZIqq0A" name="orderId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q0S9wnLIEfCMALJnZIqq0A" name="paymentId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q0S9w3LIEfCMALJnZIqq0A" name="policyIds" type="_qyxTwHLIEfCMALJnZIqq0A"/>
                <ownedParameter xmi:id="_q0S9xHLIEfCMALJnZIqq0A" name="policyNames" type="_qyxTwHLIEfCMALJnZIqq0A"/>
              </ownedOperation>
              <ownedOperation xmi:id="_q0Uy8HLIEfCMALJnZIqq0A" name="getPolicyNamesByIds" method="_q1pBk3LIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_q0Uy8XLIEfCMALJnZIqq0A" name="policyIds" type="_qyxTwHLIEfCMALJnZIqq0A"/>
                <ownedParameter xmi:id="_q0Uy8nLIEfCMALJnZIqq0A" isOrdered="true" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_q0Uy83LIEfCMALJnZIqq0A" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_q0XPMXLIEfCMALJnZIqq0A" name="sendPaymentStatusNotification" visibility="private" method="_q1sE5HLIEfCMALJnZIqq0A">
                <ownedParameter xmi:id="_q0XPMnLIEfCMALJnZIqq0A" name="customerId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q0XPM3LIEfCMALJnZIqq0A" name="customerName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q0XPNHLIEfCMALJnZIqq0A" name="invoiceId">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q0XPNXLIEfCMALJnZIqq0A" name="status">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_q0XPNnLIEfCMALJnZIqq0A" name="amount" type="_q0WoIHLIEfCMALJnZIqq0A"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_q2J-8XLIEfCMALJnZIqq0A" name="" memberEnd="_q2J-8nLIEfCMALJnZIqq0A _q04zoXLIEfCMALJnZIqq0A">
              <ownedEnd xmi:id="_q2J-8nLIEfCMALJnZIqq0A" name="" type="_qZqQMHLIEfCMALJnZIqq0A" association="_q2J-8XLIEfCMALJnZIqq0A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_q2LNEXLIEfCMALJnZIqq0A" name="" memberEnd="_q2LNEnLIEfCMALJnZIqq0A _q05asnLIEfCMALJnZIqq0A">
              <ownedEnd xmi:id="_q2LNEnLIEfCMALJnZIqq0A" name="" type="_qZqQMHLIEfCMALJnZIqq0A" association="_q2LNEXLIEfCMALJnZIqq0A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_q2L0IXLIEfCMALJnZIqq0A" name="" memberEnd="_q2L0InLIEfCMALJnZIqq0A _q06BwXLIEfCMALJnZIqq0A">
              <ownedEnd xmi:id="_q2L0InLIEfCMALJnZIqq0A" name="" type="_qZqQMHLIEfCMALJnZIqq0A" association="_q2L0IXLIEfCMALJnZIqq0A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_q2L0JHLIEfCMALJnZIqq0A" name="" memberEnd="_q2L0JXLIEfCMALJnZIqq0A _q06BxHLIEfCMALJnZIqq0A">
              <ownedEnd xmi:id="_q2L0JXLIEfCMALJnZIqq0A" name="" type="_qZqQMHLIEfCMALJnZIqq0A" association="_q2L0JHLIEfCMALJnZIqq0A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_q2MbMXLIEfCMALJnZIqq0A" name="" memberEnd="_q2MbMnLIEfCMALJnZIqq0A _q06o0nLIEfCMALJnZIqq0A">
              <ownedEnd xmi:id="_q2MbMnLIEfCMALJnZIqq0A" name="" type="_qZqQMHLIEfCMALJnZIqq0A" association="_q2MbMXLIEfCMALJnZIqq0A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_q2NCQXLIEfCMALJnZIqq0A" name="" memberEnd="_q2NCQnLIEfCMALJnZIqq0A _q06o1XLIEfCMALJnZIqq0A">
              <ownedEnd xmi:id="_q2NCQnLIEfCMALJnZIqq0A" name="" type="_qZqQMHLIEfCMALJnZIqq0A" association="_q2NCQXLIEfCMALJnZIqq0A"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_q2NpUHLIEfCMALJnZIqq0A" name="" memberEnd="_q2NpUXLIEfCMALJnZIqq0A _q0728HLIEfCMALJnZIqq0A">
              <ownedEnd xmi:id="_q2NpUXLIEfCMALJnZIqq0A" name="" type="_qZqQMHLIEfCMALJnZIqq0A" association="_q2NpUHLIEfCMALJnZIqq0A"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_qaldQHLIEfCMALJnZIqq0A" name="CustomerService">
            <ownedOperation xmi:id="_qamrYHLIEfCMALJnZIqq0A" name="getUnpaidInvoices">
              <ownedParameter xmi:id="_qamrYXLIEfCMALJnZIqq0A" name="customerId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qanScHLIEfCMALJnZIqq0A" type="_qbMhQHLIEfCMALJnZIqq0A" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qanScXLIEfCMALJnZIqq0A" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_qaogkHLIEfCMALJnZIqq0A" name="processPayment">
              <ownedParameter xmi:id="_qaogkXLIEfCMALJnZIqq0A" name="razorpayOrderId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qaogknLIEfCMALJnZIqq0A" name="razorpayPaymentId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qaogk3LIEfCMALJnZIqq0A" name="status">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_qapHoHLIEfCMALJnZIqq0A" name="processPayment">
              <ownedParameter xmi:id="_qapHoXLIEfCMALJnZIqq0A" name="razorpayOrderId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qapHonLIEfCMALJnZIqq0A" name="razorpayPaymentId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qapusHLIEfCMALJnZIqq0A" name="status">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qapusXLIEfCMALJnZIqq0A" name="subscriptionId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_qapusnLIEfCMALJnZIqq0A" name="getPaymentHistory">
              <ownedParameter xmi:id="_qaqVwHLIEfCMALJnZIqq0A" name="customerId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qaqVwXLIEfCMALJnZIqq0A" type="_qbCwQHLIEfCMALJnZIqq0A" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qaqVwnLIEfCMALJnZIqq0A" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_qaq80HLIEfCMALJnZIqq0A" name="getInvoiceById">
              <ownedParameter xmi:id="_qarj4HLIEfCMALJnZIqq0A" name="invoiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q0ZEYHLIEfCMALJnZIqq0A" type="_qy0XEHLIEfCMALJnZIqq0A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_qavOQHLIEfCMALJnZIqq0A" name="enableAutoPay">
              <ownedParameter xmi:id="_qav1UHLIEfCMALJnZIqq0A" name="customerId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qav1UXLIEfCMALJnZIqq0A" name="invoiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qav1UnLIEfCMALJnZIqq0A" name="months">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qawcYHLIEfCMALJnZIqq0A" name="amount">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qaxDcHLIEfCMALJnZIqq0A" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_qaxqgHLIEfCMALJnZIqq0A" name="enableAutoPayPolicy">
              <ownedParameter xmi:id="_qaxqgXLIEfCMALJnZIqq0A" name="customerId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qaxqgnLIEfCMALJnZIqq0A" name="policyId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qayRkHLIEfCMALJnZIqq0A" name="months">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qayRkXLIEfCMALJnZIqq0A" name="amount">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qayRknLIEfCMALJnZIqq0A" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_qay4oHLIEfCMALJnZIqq0A" name="disableAutoPay">
              <ownedParameter xmi:id="_qay4oXLIEfCMALJnZIqq0A" name="customerId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qay4onLIEfCMALJnZIqq0A" name="subscriptionId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_qazfsHLIEfCMALJnZIqq0A" name="disableAutoPay">
              <ownedParameter xmi:id="_qazfsXLIEfCMALJnZIqq0A" name="customerId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qazfsnLIEfCMALJnZIqq0A" name="subscriptionId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qa0GwHLIEfCMALJnZIqq0A" name="policyId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_qa0GwXLIEfCMALJnZIqq0A" name="getOwnedPolicies">
              <ownedParameter xmi:id="_qa0GwnLIEfCMALJnZIqq0A" name="customerId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qa0t0HLIEfCMALJnZIqq0A" type="_qa6NYHLIEfCMALJnZIqq0A" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qa0t0XLIEfCMALJnZIqq0A" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_qa1U4HLIEfCMALJnZIqq0A" name="findCustomersWithinDaysUntilExpiry" visibility="package">
              <ownedParameter xmi:id="_qa1U4XLIEfCMALJnZIqq0A" name="days">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qa1U4nLIEfCMALJnZIqq0A" type="_qbbKwHLIEfCMALJnZIqq0A" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qa1U43LIEfCMALJnZIqq0A" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_qa178HLIEfCMALJnZIqq0A" name="sendPolicyExpiryNotification">
              <ownedParameter xmi:id="_qa178XLIEfCMALJnZIqq0A" name="customerId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qa178nLIEfCMALJnZIqq0A" name="policyId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_qa2jAHLIEfCMALJnZIqq0A" name="getCustomersWithExpiringPoliciesByDays">
              <ownedParameter xmi:id="_qa2jAXLIEfCMALJnZIqq0A" name="days">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_qa3KEHLIEfCMALJnZIqq0A" type="_qbbKwHLIEfCMALJnZIqq0A" isOrdered="true" direction="return">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qa3KEXLIEfCMALJnZIqq0A" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_q0ZEYXLIEfCMALJnZIqq0A" name="getPolicyNamesByIds">
              <ownedParameter xmi:id="_q0ZrcHLIEfCMALJnZIqq0A" name="policyIds" type="_qyxTwHLIEfCMALJnZIqq0A"/>
              <ownedParameter xmi:id="_q0ZrcXLIEfCMALJnZIqq0A" isOrdered="true" direction="return">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_q0ZrcnLIEfCMALJnZIqq0A" value="*"/>
              </ownedParameter>
            </ownedOperation>
            <ownedOperation xmi:id="_q0a5kHLIEfCMALJnZIqq0A" name="recordAutopayPayment">
              <ownedParameter xmi:id="_q0a5kXLIEfCMALJnZIqq0A" name="customerId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q0a5knLIEfCMALJnZIqq0A" name="subscriptionId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q0a5k3LIEfCMALJnZIqq0A" name="razorpayOrderId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q0a5lHLIEfCMALJnZIqq0A" name="razorpayPaymentId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q0a5lXLIEfCMALJnZIqq0A" name="policyIds" type="_qyxTwHLIEfCMALJnZIqq0A"/>
              <ownedParameter xmi:id="_q0a5lnLIEfCMALJnZIqq0A" name="policyNames" type="_qyxTwHLIEfCMALJnZIqq0A"/>
            </ownedOperation>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_qVmPkHLIEfCMALJnZIqq0A" name="controller">
          <packagedElement xmi:type="uml:Class" xmi:id="_qY-6wnLIEfCMALJnZIqq0A" name="CustomerControllerTest">
            <eAnnotations xmi:id="_qZAI4HLIEfCMALJnZIqq0A" source="http://ns.yatta.de/umllab">
              <contents xmi:type="ecore:EAnnotation" xmi:id="_qZAI4XLIEfCMALJnZIqq0A" source="codegen">
                <details xmi:id="_qZAI4nLIEfCMALJnZIqq0A" key="codegenDirectory" value="/CustomerMicroservice/src/test/java"/>
              </contents>
            </eAnnotations>
            <ownedAttribute xmi:id="_q02XYXLIEfCMALJnZIqq0A" name="mockMvc" visibility="private" type="_qzAkUXLIEfCMALJnZIqq0A" association="_q2GUkHLIEfCMALJnZIqq0A"/>
            <ownedAttribute xmi:id="_q03lgXLIEfCMALJnZIqq0A" name="customerService" visibility="private" type="_qaldQHLIEfCMALJnZIqq0A" association="_q2G7oXLIEfCMALJnZIqq0A"/>
            <ownedAttribute xmi:id="_q03lhHLIEfCMALJnZIqq0A" name="customerRepository" visibility="private" type="_qYiO0HLIEfCMALJnZIqq0A" association="_q2IJwXLIEfCMALJnZIqq0A"/>
            <ownedAttribute xmi:id="_q04MknLIEfCMALJnZIqq0A" name="objectMapper" visibility="private" type="_qy6dsHLIEfCMALJnZIqq0A" association="_q2JX4XLIEfCMALJnZIqq0A"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1kwIHLIEfCMALJnZIqq0A" name="testGetUnpaidInvoices" specification="_qZClIHLIEfCMALJnZIqq0A">
              <language>java</language>
              <body>String customerId = &quot;cust123&quot;;&#xD;
&#xD;
     Invoice invoice1 = new Invoice();&#xD;
     invoice1.setId(&quot;inv1&quot;);&#xD;
     invoice1.setCustomerId(customerId);&#xD;
     invoice1.setAmount(100.0);&#xD;
     invoice1.setStatus(&quot;unpaid&quot;);&#xD;
&#xD;
     Invoice invoice2 = new Invoice();&#xD;
     invoice2.setId(&quot;inv2&quot;);&#xD;
     invoice2.setCustomerId(customerId);&#xD;
     invoice2.setAmount(200.0);&#xD;
     invoice2.setStatus(&quot;unpaid&quot;);&#xD;
&#xD;
     List&lt;Invoice> invoices = Arrays.asList(invoice1, invoice2);&#xD;
&#xD;
     Mockito.when(customerService.getUnpaidInvoices(customerId)).thenReturn(invoices);&#xD;
&#xD;
     mockMvc.perform(get(&quot;/api/customer/invoices/unpaid/{customerId}&quot;, customerId))&#xD;
             .andExpect(status().isOk())&#xD;
             .andExpect(jsonPath(&quot;$&quot;, hasSize(2)))&#xD;
             .andExpect(jsonPath(&quot;$[0].id&quot;, is(&quot;inv1&quot;)))&#xD;
             .andExpect(jsonPath(&quot;$[1].id&quot;, is(&quot;inv2&quot;)));&#xD;
&#xD;
     Mockito.verify(customerService).getUnpaidInvoices(customerId);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1kwIXLIEfCMALJnZIqq0A" name="testHandleWebhook_SubscriptionCharged_Success" specification="_qZEaUHLIEfCMALJnZIqq0A">
              <language>java</language>
              <body>JSONObject notes = new JSONObject();&#xD;
     notes.put(&quot;customerId&quot;, &quot;cust123&quot;);&#xD;
     notes.put(&quot;policyIds&quot;, Arrays.asList(&quot;policy1&quot;, &quot;policy2&quot;));&#xD;
     notes.put(&quot;policyNames&quot;, Arrays.asList(&quot;Policy One&quot;, &quot;Policy Two&quot;));&#xD;
&#xD;
     JSONObject subscriptionEntity = new JSONObject();&#xD;
     subscriptionEntity.put(&quot;id&quot;, &quot;sub123&quot;);&#xD;
     subscriptionEntity.put(&quot;order_id&quot;, &quot;order123&quot;);&#xD;
     subscriptionEntity.put(&quot;notes&quot;, notes);&#xD;
&#xD;
     JSONObject subscription = new JSONObject();&#xD;
     subscription.put(&quot;entity&quot;, subscriptionEntity);&#xD;
&#xD;
     JSONObject paymentEntity = new JSONObject();&#xD;
     paymentEntity.put(&quot;id&quot;, &quot;pay123&quot;);&#xD;
&#xD;
     JSONObject payment = new JSONObject();&#xD;
     payment.put(&quot;entity&quot;, paymentEntity);&#xD;
&#xD;
     JSONObject payload = new JSONObject();&#xD;
     payload.put(&quot;subscription&quot;, subscription);&#xD;
     payload.put(&quot;payment&quot;, payment);&#xD;
&#xD;
     JSONObject root = new JSONObject();&#xD;
     root.put(&quot;event&quot;, &quot;subscription.charged&quot;);&#xD;
     root.put(&quot;payload&quot;, payload);&#xD;
&#xD;
     Mockito.doNothing().when(customerService).recordAutopayPayment(&#xD;
             ArgumentMatchers.eq(&quot;cust123&quot;), ArgumentMatchers.eq(&quot;sub123&quot;),&#xD;
             ArgumentMatchers.eq(&quot;order123&quot;), ArgumentMatchers.eq(&quot;pay123&quot;),&#xD;
             ArgumentMatchers.anyList(), ArgumentMatchers.anyList());&#xD;
&#xD;
     mockMvc.perform(post(&quot;/api/customer/webhook&quot;)&#xD;
                     .contentType(MediaType.APPLICATION_JSON)&#xD;
                     .content(root.toString()))&#xD;
             .andExpect(status().isOk())&#xD;
             .andExpect(content().string(&quot;Subscription charged event processed&quot;));&#xD;
&#xD;
     Mockito.verify(customerService).recordAutopayPayment(&#xD;
             ArgumentMatchers.eq(&quot;cust123&quot;), ArgumentMatchers.eq(&quot;sub123&quot;),&#xD;
             ArgumentMatchers.eq(&quot;order123&quot;), ArgumentMatchers.eq(&quot;pay123&quot;),&#xD;
             ArgumentMatchers.anyList(), ArgumentMatchers.anyList());&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1kwInLIEfCMALJnZIqq0A" name="testHandleWebhook_PaymentCaptured_Success" specification="_qZFocHLIEfCMALJnZIqq0A">
              <language>java</language>
              <body>JSONObject paymentEntity = new JSONObject();&#xD;
     paymentEntity.put(&quot;id&quot;, &quot;pay123&quot;);&#xD;
     paymentEntity.put(&quot;order_id&quot;, &quot;order123&quot;);&#xD;
     paymentEntity.put(&quot;customer_id&quot;, &quot;cust123&quot;);&#xD;
     paymentEntity.put(&quot;invoice_id&quot;, &quot;inv123&quot;);&#xD;
&#xD;
     JSONObject payment = new JSONObject();&#xD;
     payment.put(&quot;entity&quot;, paymentEntity);&#xD;
&#xD;
     JSONObject payload = new JSONObject();&#xD;
     payload.put(&quot;payment&quot;, payment);&#xD;
&#xD;
     JSONObject root = new JSONObject();&#xD;
     root.put(&quot;event&quot;, &quot;payment.captured&quot;);&#xD;
     root.put(&quot;payload&quot;, payload);&#xD;
&#xD;
     Invoice invoice = new Invoice();&#xD;
     invoice.setId(&quot;inv123&quot;);&#xD;
     invoice.setPolicyIds(Arrays.asList(&quot;policy1&quot;, &quot;policy2&quot;));&#xD;
&#xD;
     Mockito.when(customerService.getInvoiceById(&quot;inv123&quot;)).thenReturn(Optional.of(invoice));&#xD;
     Mockito.when(customerService.getPolicyNamesByIds(invoice.getPolicyIds())).thenReturn(Arrays.asList(&quot;Policy One&quot;, &quot;Policy Two&quot;));&#xD;
&#xD;
     Mockito.doNothing().when(customerService).processPayment(&quot;order123&quot;, &quot;pay123&quot;, &quot;paid&quot;, null);&#xD;
&#xD;
     mockMvc.perform(post(&quot;/api/customer/webhook&quot;)&#xD;
                     .contentType(MediaType.APPLICATION_JSON)&#xD;
                     .content(root.toString()))&#xD;
             .andExpect(status().isOk())&#xD;
             .andExpect(content().string(&quot;Payment captured event processed&quot;));&#xD;
&#xD;
     Mockito.verify(customerService).getInvoiceById(&quot;inv123&quot;);&#xD;
     Mockito.verify(customerService).getPolicyNamesByIds(invoice.getPolicyIds());&#xD;
     Mockito.verify(customerService).processPayment(&quot;order123&quot;, &quot;pay123&quot;, &quot;paid&quot;, null);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1kwI3LIEfCMALJnZIqq0A" name="testHandleWebhook_InvalidPayload" specification="_qZHdoHLIEfCMALJnZIqq0A">
              <language>java</language>
              <body>JSONObject root = new JSONObject();&#xD;
     root.put(&quot;event&quot;, &quot;subscription.charged&quot;);&#xD;
     // Missing payload object&#xD;
     root.put(&quot;payload&quot;, JSONObject.NULL);&#xD;
&#xD;
     mockMvc.perform(post(&quot;/api/customer/webhook&quot;)&#xD;
                     .contentType(MediaType.APPLICATION_JSON)&#xD;
                     .content(root.toString()))&#xD;
             .andExpect(status().isBadRequest())&#xD;
             .andExpect(content().string(&quot;Invalid payload&quot;));&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1kwJHLIEfCMALJnZIqq0A" name="testGetPaymentHistory" specification="_qZIrwXLIEfCMALJnZIqq0A">
              <language>java</language>
              <body>String customerId = &quot;cust123&quot;;&#xD;
&#xD;
     Payment payment = new Payment();&#xD;
     payment.setId(&quot;pay1&quot;);&#xD;
     payment.setCustomerId(customerId);&#xD;
     payment.setAmount(120.0);&#xD;
     payment.setStatus(&quot;paid&quot;);&#xD;
&#xD;
     Mockito.when(customerService.getPaymentHistory(customerId)).thenReturn(Collections.singletonList(payment));&#xD;
&#xD;
     mockMvc.perform(get(&quot;/api/customer/payments/history/{customerId}&quot;, customerId))&#xD;
             .andExpect(status().isOk())&#xD;
             .andExpect(jsonPath(&quot;$&quot;, hasSize(1)))&#xD;
             .andExpect(jsonPath(&quot;$[0].id&quot;, is(&quot;pay1&quot;)))&#xD;
             .andExpect(jsonPath(&quot;$[0].amount&quot;, is(120.0)));&#xD;
&#xD;
     Mockito.verify(customerService).getPaymentHistory(customerId);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1lXMHLIEfCMALJnZIqq0A" name="testGetInvoiceById_Found" specification="_qZJ54XLIEfCMALJnZIqq0A">
              <language>java</language>
              <body>String invoiceId = &quot;inv123&quot;;&#xD;
     Invoice invoice = new Invoice();&#xD;
     invoice.setId(invoiceId);&#xD;
     invoice.setCustomerId(&quot;cust123&quot;);&#xD;
&#xD;
     Mockito.when(customerService.getInvoiceById(invoiceId)).thenReturn(Optional.of(invoice));&#xD;
&#xD;
     mockMvc.perform(get(&quot;/api/customer/invoices/{invoiceId}&quot;, invoiceId))&#xD;
             .andExpect(status().isOk())&#xD;
             .andExpect(jsonPath(&quot;$.id&quot;, is(invoiceId)));&#xD;
&#xD;
     Mockito.verify(customerService).getInvoiceById(invoiceId);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1lXMXLIEfCMALJnZIqq0A" name="testGetInvoiceById_NotFound" specification="_qZLvEHLIEfCMALJnZIqq0A">
              <language>java</language>
              <body>String invoiceId = &quot;invNotExist&quot;;&#xD;
&#xD;
     Mockito.when(customerService.getInvoiceById(invoiceId)).thenReturn(Optional.empty());&#xD;
&#xD;
     mockMvc.perform(get(&quot;/api/customer/invoices/{invoiceId}&quot;, invoiceId))&#xD;
             .andExpect(status().isNotFound());&#xD;
&#xD;
     Mockito.verify(customerService).getInvoiceById(invoiceId);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1lXMnLIEfCMALJnZIqq0A" name="testGetPolicyNamesByIds" specification="_qZM9MHLIEfCMALJnZIqq0A">
              <language>java</language>
              <body>List&lt;String> policyIds = Arrays.asList(&quot;policy1&quot;, &quot;policy2&quot;);&#xD;
     List&lt;String> policyNames = Arrays.asList(&quot;Policy One&quot;, &quot;Policy Two&quot;);&#xD;
&#xD;
     Mockito.when(customerService.getPolicyNamesByIds(policyIds)).thenReturn(policyNames);&#xD;
&#xD;
     mockMvc.perform(post(&quot;/api/customer/policies/names&quot;)&#xD;
                     .contentType(MediaType.APPLICATION_JSON)&#xD;
                     .content(objectMapper.writeValueAsString(policyIds)))&#xD;
             .andExpect(status().isOk())&#xD;
             .andExpect(jsonPath(&quot;$&quot;, hasSize(2)))&#xD;
             .andExpect(jsonPath(&quot;$[0]&quot;, is(&quot;Policy One&quot;)))&#xD;
             .andExpect(jsonPath(&quot;$[1]&quot;, is(&quot;Policy Two&quot;)));&#xD;
&#xD;
     Mockito.verify(customerService).getPolicyNamesByIds(policyIds);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1lXM3LIEfCMALJnZIqq0A" name="testEnableAutoPay" specification="_qZOLUHLIEfCMALJnZIqq0A">
              <language>java</language>
              <body>String invoiceId = &quot;inv123&quot;;&#xD;
     Map&lt;String, Object> body = new HashMap&lt;>();&#xD;
     body.put(&quot;customerId&quot;, &quot;cust123&quot;);&#xD;
     body.put(&quot;months&quot;, 6);&#xD;
     body.put(&quot;amount&quot;, 100.0);&#xD;
&#xD;
     Mockito.when(customerService.enableAutoPay(&quot;cust123&quot;, invoiceId, 6, 100.0)).thenReturn(&quot;sub123&quot;);&#xD;
&#xD;
     mockMvc.perform(post(&quot;/api/customer/autopay/enable/{invoiceId}&quot;, invoiceId)&#xD;
                     .contentType(MediaType.APPLICATION_JSON)&#xD;
                     .content(objectMapper.writeValueAsString(body)))&#xD;
             .andExpect(status().isOk())&#xD;
             .andExpect(content().string(containsString(&quot;Autopay enabled. Subscription ID: sub123&quot;)));&#xD;
&#xD;
     Mockito.verify(customerService).enableAutoPay(&quot;cust123&quot;, invoiceId, 6, 100.0);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1lXNHLIEfCMALJnZIqq0A" name="testEnableAutoPayPolicy" specification="_qZPZcHLIEfCMALJnZIqq0A">
              <language>java</language>
              <body>String policyId = &quot;policy123&quot;;&#xD;
     Map&lt;String, Object> body = new HashMap&lt;>();&#xD;
     body.put(&quot;customerId&quot;, &quot;cust123&quot;);&#xD;
     body.put(&quot;months&quot;, 12);&#xD;
     body.put(&quot;amount&quot;, 150.0);&#xD;
&#xD;
     Mockito.when(customerService.enableAutoPayPolicy(&quot;cust123&quot;, policyId, 12, 150.0)).thenReturn(&quot;sub456&quot;);&#xD;
&#xD;
     mockMvc.perform(post(&quot;/api/customer/autopay/enable/policy/{policyId}&quot;, policyId)&#xD;
                     .contentType(MediaType.APPLICATION_JSON)&#xD;
                     .content(objectMapper.writeValueAsString(body)))&#xD;
             .andExpect(status().isOk())&#xD;
             .andExpect(content().string(containsString(&quot;Autopay enabled for policy. Subscription ID: sub456&quot;)));&#xD;
&#xD;
     Mockito.verify(customerService).enableAutoPayPolicy(&quot;cust123&quot;, policyId, 12, 150.0);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1lXNXLIEfCMALJnZIqq0A" name="testDisableAutoPay" specification="_qZQAgXLIEfCMALJnZIqq0A">
              <language>java</language>
              <body>Map&lt;String, String> body = new HashMap&lt;>();&#xD;
     body.put(&quot;customerId&quot;, &quot;cust123&quot;);&#xD;
     body.put(&quot;subscriptionId&quot;, &quot;sub123&quot;);&#xD;
     body.put(&quot;policyId&quot;, &quot;policy123&quot;);&#xD;
&#xD;
     Mockito.doNothing().when(customerService).disableAutoPay(&quot;cust123&quot;, &quot;sub123&quot;, &quot;policy123&quot;);&#xD;
&#xD;
     mockMvc.perform(post(&quot;/api/customer/autopay/disable&quot;)&#xD;
                     .contentType(MediaType.APPLICATION_JSON)&#xD;
                     .content(objectMapper.writeValueAsString(body)))&#xD;
             .andExpect(status().isOk())&#xD;
             .andExpect(content().string(&quot;Autopay disabled&quot;));&#xD;
&#xD;
     Mockito.verify(customerService).disableAutoPay(&quot;cust123&quot;, &quot;sub123&quot;, &quot;policy123&quot;);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1l-QHLIEfCMALJnZIqq0A" name="testGetOwnedPolicies" specification="_qZROoHLIEfCMALJnZIqq0A">
              <language>java</language>
              <body>String customerId = &quot;cust123&quot;;&#xD;
     Policy policy = new Policy();&#xD;
     policy.setId(&quot;policy1&quot;);&#xD;
     policy.setName(&quot;Health Insurance&quot;);&#xD;
     List&lt;Policy> policies = Collections.singletonList(policy);&#xD;
&#xD;
     Mockito.when(customerService.getOwnedPolicies(customerId)).thenReturn(policies);&#xD;
&#xD;
     mockMvc.perform(get(&quot;/api/customer/policies/owned/{customerId}&quot;, customerId))&#xD;
             .andExpect(status().isOk())&#xD;
             .andExpect(jsonPath(&quot;$&quot;, hasSize(1)))&#xD;
             .andExpect(jsonPath(&quot;$[0].id&quot;, is(&quot;policy1&quot;)))&#xD;
             .andExpect(jsonPath(&quot;$[0].name&quot;, is(&quot;Health Insurance&quot;)));&#xD;
&#xD;
     Mockito.verify(customerService).getOwnedPolicies(customerId);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1l-QXLIEfCMALJnZIqq0A" name="testGetCustomersWithExpiringPoliciesByDays" specification="_qZTD0HLIEfCMALJnZIqq0A">
              <language>java</language>
              <body>int days = 30;&#xD;
&#xD;
     Customer customer = new Customer();&#xD;
     customer.setId(&quot;cust123&quot;);&#xD;
     customer.setName(&quot;John Doe&quot;);&#xD;
&#xD;
     List&lt;Customer> customers = Collections.singletonList(customer);&#xD;
&#xD;
     Mockito.when(customerService.getCustomersWithExpiringPoliciesByDays(days)).thenReturn(customers);&#xD;
&#xD;
     mockMvc.perform(get(&quot;/api/customer/customers/expiring-policies/by-days&quot;)&#xD;
                     .param(&quot;days&quot;, String.valueOf(days)))&#xD;
             .andExpect(status().isOk())&#xD;
             .andExpect(jsonPath(&quot;$&quot;, hasSize(1)))&#xD;
             .andExpect(jsonPath(&quot;$[0].id&quot;, is(&quot;cust123&quot;)))&#xD;
             .andExpect(jsonPath(&quot;$[0].name&quot;, is(&quot;John Doe&quot;)));&#xD;
&#xD;
     Mockito.verify(customerService).getCustomersWithExpiringPoliciesByDays(days);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1l-QnLIEfCMALJnZIqq0A" name="testNotifyExpiringPolicies" specification="_qZU5AHLIEfCMALJnZIqq0A">
              <language>java</language>
              <body>NotificationRequest req1 = new NotificationRequest();&#xD;
     req1.setCustomerId(&quot;cust1&quot;);&#xD;
     req1.setPolicyId(&quot;policy1&quot;);&#xD;
&#xD;
     NotificationRequest req2 = new NotificationRequest();&#xD;
     req2.setCustomerId(&quot;cust2&quot;);&#xD;
     req2.setPolicyId(&quot;policy2&quot;);&#xD;
&#xD;
     List&lt;NotificationRequest> requests = Arrays.asList(req1, req2);&#xD;
&#xD;
     Mockito.doNothing().when(customerService).sendPolicyExpiryNotification(&quot;cust1&quot;, &quot;policy1&quot;);&#xD;
     Mockito.doNothing().when(customerService).sendPolicyExpiryNotification(&quot;cust2&quot;, &quot;policy2&quot;);&#xD;
&#xD;
     mockMvc.perform(post(&quot;/api/customer/customers/expiring-policies/notify&quot;)&#xD;
                     .contentType(MediaType.APPLICATION_JSON)&#xD;
                     .content(objectMapper.writeValueAsString(requests)))&#xD;
             .andExpect(status().isOk())&#xD;
             .andExpect(content().string(&quot;Notifications triggered.&quot;));&#xD;
&#xD;
     Mockito.verify(customerService).sendPolicyExpiryNotification(&quot;cust1&quot;, &quot;policy1&quot;);&#xD;
     Mockito.verify(customerService).sendPolicyExpiryNotification(&quot;cust2&quot;, &quot;policy2&quot;);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1l-Q3LIEfCMALJnZIqq0A" name="testGetCustomerById_Found" specification="_qZWHIHLIEfCMALJnZIqq0A">
              <language>java</language>
              <body>String customerId = &quot;cust123&quot;;&#xD;
&#xD;
     Customer customer = new Customer();&#xD;
     customer.setId(customerId);&#xD;
     customer.setName(&quot;John Doe&quot;);&#xD;
&#xD;
     Mockito.when(customerRepository.findById(customerId)).thenReturn(Optional.of(customer));&#xD;
&#xD;
     mockMvc.perform(get(&quot;/api/customer/{customerId}&quot;, customerId))&#xD;
             .andExpect(status().isOk())&#xD;
             .andExpect(jsonPath(&quot;$.id&quot;, is(customerId)))&#xD;
             .andExpect(jsonPath(&quot;$.name&quot;, is(&quot;John Doe&quot;)));&#xD;
&#xD;
     Mockito.verify(customerRepository).findById(customerId);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1l-RHLIEfCMALJnZIqq0A" name="testGetCustomerById_NotFound" specification="_qZXVQHLIEfCMALJnZIqq0A">
              <language>java</language>
              <body>String customerId = &quot;unknownId&quot;;&#xD;
&#xD;
     Mockito.when(customerRepository.findById(customerId)).thenReturn(Optional.empty());&#xD;
&#xD;
     mockMvc.perform(get(&quot;/api/customer/{customerId}&quot;, customerId))&#xD;
             .andExpect(status().isNotFound())&#xD;
             .andExpect(jsonPath(&quot;$.message&quot;, containsString(&quot;Customer not found&quot;)));&#xD;
&#xD;
     Mockito.verify(customerRepository).findById(customerId);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1l-RXLIEfCMALJnZIqq0A" name="testGetCustomerById_Exception" specification="_qZX8UXLIEfCMALJnZIqq0A">
              <language>java</language>
              <body>String customerId = &quot;custError&quot;;&#xD;
&#xD;
     Mockito.when(customerRepository.findById(customerId)).thenThrow(new RuntimeException(&quot;DB error&quot;));&#xD;
&#xD;
     mockMvc.perform(get(&quot;/api/customer/{customerId}&quot;, customerId))&#xD;
             .andExpect(status().isInternalServerError())&#xD;
             .andExpect(jsonPath(&quot;$.message&quot;, is(&quot;Internal server error&quot;)));&#xD;
&#xD;
     Mockito.verify(customerRepository).findById(customerId);&#xD;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_qZClIHLIEfCMALJnZIqq0A" name="testGetUnpaidInvoices" method="_q1kwIHLIEfCMALJnZIqq0A" raisedException="_q0OsUXLIEfCMALJnZIqq0A"/>
            <ownedOperation xmi:id="_qZEaUHLIEfCMALJnZIqq0A" name="testHandleWebhook_SubscriptionCharged_Success" method="_q1kwIXLIEfCMALJnZIqq0A" raisedException="_q0OsUXLIEfCMALJnZIqq0A"/>
            <ownedOperation xmi:id="_qZFocHLIEfCMALJnZIqq0A" name="testHandleWebhook_PaymentCaptured_Success" method="_q1kwInLIEfCMALJnZIqq0A" raisedException="_q0OsUXLIEfCMALJnZIqq0A"/>
            <ownedOperation xmi:id="_qZHdoHLIEfCMALJnZIqq0A" name="testHandleWebhook_InvalidPayload" method="_q1kwI3LIEfCMALJnZIqq0A" raisedException="_q0OsUXLIEfCMALJnZIqq0A"/>
            <ownedOperation xmi:id="_qZIrwXLIEfCMALJnZIqq0A" name="testGetPaymentHistory" method="_q1kwJHLIEfCMALJnZIqq0A" raisedException="_q0OsUXLIEfCMALJnZIqq0A"/>
            <ownedOperation xmi:id="_qZJ54XLIEfCMALJnZIqq0A" name="testGetInvoiceById_Found" method="_q1lXMHLIEfCMALJnZIqq0A" raisedException="_q0OsUXLIEfCMALJnZIqq0A"/>
            <ownedOperation xmi:id="_qZLvEHLIEfCMALJnZIqq0A" name="testGetInvoiceById_NotFound" method="_q1lXMXLIEfCMALJnZIqq0A" raisedException="_q0OsUXLIEfCMALJnZIqq0A"/>
            <ownedOperation xmi:id="_qZM9MHLIEfCMALJnZIqq0A" name="testGetPolicyNamesByIds" method="_q1lXMnLIEfCMALJnZIqq0A" raisedException="_q0OsUXLIEfCMALJnZIqq0A"/>
            <ownedOperation xmi:id="_qZOLUHLIEfCMALJnZIqq0A" name="testEnableAutoPay" method="_q1lXM3LIEfCMALJnZIqq0A" raisedException="_q0OsUXLIEfCMALJnZIqq0A"/>
            <ownedOperation xmi:id="_qZPZcHLIEfCMALJnZIqq0A" name="testEnableAutoPayPolicy" method="_q1lXNHLIEfCMALJnZIqq0A" raisedException="_q0OsUXLIEfCMALJnZIqq0A"/>
            <ownedOperation xmi:id="_qZQAgXLIEfCMALJnZIqq0A" name="testDisableAutoPay" method="_q1lXNXLIEfCMALJnZIqq0A" raisedException="_q0OsUXLIEfCMALJnZIqq0A"/>
            <ownedOperation xmi:id="_qZROoHLIEfCMALJnZIqq0A" name="testGetOwnedPolicies" method="_q1l-QHLIEfCMALJnZIqq0A" raisedException="_q0OsUXLIEfCMALJnZIqq0A"/>
            <ownedOperation xmi:id="_qZTD0HLIEfCMALJnZIqq0A" name="testGetCustomersWithExpiringPoliciesByDays" method="_q1l-QXLIEfCMALJnZIqq0A" raisedException="_q0OsUXLIEfCMALJnZIqq0A"/>
            <ownedOperation xmi:id="_qZU5AHLIEfCMALJnZIqq0A" name="testNotifyExpiringPolicies" method="_q1l-QnLIEfCMALJnZIqq0A" raisedException="_q0OsUXLIEfCMALJnZIqq0A"/>
            <ownedOperation xmi:id="_qZWHIHLIEfCMALJnZIqq0A" name="testGetCustomerById_Found" method="_q1l-Q3LIEfCMALJnZIqq0A" raisedException="_q0OsUXLIEfCMALJnZIqq0A"/>
            <ownedOperation xmi:id="_qZXVQHLIEfCMALJnZIqq0A" name="testGetCustomerById_NotFound" method="_q1l-RHLIEfCMALJnZIqq0A" raisedException="_q0OsUXLIEfCMALJnZIqq0A"/>
            <ownedOperation xmi:id="_qZX8UXLIEfCMALJnZIqq0A" name="testGetCustomerById_Exception" method="_q1l-RXLIEfCMALJnZIqq0A" raisedException="_q0OsUXLIEfCMALJnZIqq0A"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_qbnYAHLIEfCMALJnZIqq0A" name="CustomerController">
            <ownedAttribute xmi:id="_q1TDUHLIEfCMALJnZIqq0A" name="log" visibility="private" isLeaf="true" isStatic="true" type="_qzIgIHLIEfCMALJnZIqq0A" isReadOnly="true" association="_q2PegHLIEfCMALJnZIqq0A">
              <defaultValue xmi:type="uml:LiteralString" xmi:id="_q1TDUXLIEfCMALJnZIqq0A" value="LoggerFactory.getLogger(CustomerController.class)"/>
            </ownedAttribute>
            <ownedAttribute xmi:id="_q1TDU3LIEfCMALJnZIqq0A" name="customerService" visibility="private" type="_qaldQHLIEfCMALJnZIqq0A" association="_q2Peg3LIEfCMALJnZIqq0A"/>
            <ownedAttribute xmi:id="_q1TqYnLIEfCMALJnZIqq0A" name="customerRepository" visibility="private" type="_qYiO0HLIEfCMALJnZIqq0A" association="_q2QsoHLIEfCMALJnZIqq0A"/>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1tTAHLIEfCMALJnZIqq0A" name="getUnpaidInvoices" specification="_qbomIXLIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_q1tTAXLIEfCMALJnZIqq0A" name="customerId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q1tTAnLIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
              <language>java</language>
              <body>log.info(&quot;Fetching unpaid invoices for customerId: {}&quot;, customerId);&#xD;
     List&lt;Invoice> invoices = customerService.getUnpaidInvoices(customerId);&#xD;
     return ResponseEntity.ok(invoices);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1t6EHLIEfCMALJnZIqq0A" name="handleWebhook" specification="_qbuFs3LIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_q1t6EXLIEfCMALJnZIqq0A" name="payload">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q1t6EnLIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
              <language>java</language>
              <body>try {&#xD;
         JSONObject json = new JSONObject(payload);&#xD;
         String event = json.optString(&quot;event&quot;);&#xD;
&#xD;
         JSONObject payloadObj = json.optJSONObject(&quot;payload&quot;);&#xD;
         if (payloadObj == null) {&#xD;
             return ResponseEntity.badRequest().body(&quot;Invalid payload&quot;);&#xD;
         }&#xD;
&#xD;
         if (&quot;subscription.charged&quot;.equals(event)) {&#xD;
             // Existing subscription charged handler&#xD;
             JSONObject subscriptionEntity = payloadObj.optJSONObject(&quot;subscription&quot;) != null&#xD;
                     ? payloadObj.optJSONObject(&quot;subscription&quot;).optJSONObject(&quot;entity&quot;) : null;&#xD;
             JSONObject paymentEntity = payloadObj.optJSONObject(&quot;payment&quot;) != null&#xD;
                     ? payloadObj.optJSONObject(&quot;payment&quot;).optJSONObject(&quot;entity&quot;) : null;&#xD;
&#xD;
             if (subscriptionEntity == null || paymentEntity == null) {&#xD;
                 return ResponseEntity.badRequest().body(&quot;Missing subscription or payment entity&quot;);&#xD;
             }&#xD;
&#xD;
             String subscriptionId = subscriptionEntity.optString(&quot;id&quot;);&#xD;
             String razorpayOrderId = subscriptionEntity.optString(&quot;order_id&quot;);&#xD;
             String razorpayPaymentId = paymentEntity.optString(&quot;id&quot;);&#xD;
&#xD;
             JSONObject notes = subscriptionEntity.optJSONObject(&quot;notes&quot;);&#xD;
             String customerId = notes.optString(&quot;customerId&quot;);&#xD;
             JSONArray policyIdsJson = notes.optJSONArray(&quot;policyIds&quot;);&#xD;
             JSONArray policyNamesJson = notes.optJSONArray(&quot;policyNames&quot;);&#xD;
&#xD;
             List&lt;String> policyIds = new ArrayList&lt;>();&#xD;
             if (policyIdsJson != null) {&#xD;
                 for (int i = 0; i &lt; policyIdsJson.length(); i++) {&#xD;
                     policyIds.add(policyIdsJson.getString(i));&#xD;
                 }&#xD;
             }&#xD;
&#xD;
             List&lt;String> policyNames = new ArrayList&lt;>();&#xD;
             if (policyNamesJson != null) {&#xD;
                 for (int i = 0; i &lt; policyNamesJson.length(); i++) {&#xD;
                     policyNames.add(policyNamesJson.getString(i));&#xD;
                 }&#xD;
             }&#xD;
&#xD;
             customerService.recordAutopayPayment(&#xD;
                 customerId,&#xD;
                 subscriptionId,&#xD;
                 razorpayOrderId,&#xD;
                 razorpayPaymentId,&#xD;
                 policyIds,&#xD;
                 policyNames&#xD;
             );&#xD;
             &#xD;
&#xD;
             return ResponseEntity.ok(&quot;Subscription charged event processed&quot;);&#xD;
         }&#xD;
         else if (&quot;payment.captured&quot;.equals(event)) {&#xD;
             // New handler for payment captured (invoice, payment link, etc.)&#xD;
&#xD;
             JSONObject paymentEntity = payloadObj.optJSONObject(&quot;payment&quot;) != null&#xD;
                     ? payloadObj.optJSONObject(&quot;payment&quot;).optJSONObject(&quot;entity&quot;) : null;&#xD;
&#xD;
             if (paymentEntity == null) {&#xD;
                 return ResponseEntity.badRequest().body(&quot;Missing payment entity&quot;);&#xD;
             }&#xD;
&#xD;
             String razorpayPaymentId = paymentEntity.optString(&quot;id&quot;);&#xD;
             String razorpayOrderId = paymentEntity.optString(&quot;order_id&quot;);&#xD;
             String customerId = paymentEntity.optString(&quot;customer_id&quot;); // optional, may not be present&#xD;
             String invoiceId = paymentEntity.optString(&quot;invoice_id&quot;); // may be empty&#xD;
&#xD;
             List&lt;String> policyIds = new ArrayList&lt;>();&#xD;
             List&lt;String> policyNames = new ArrayList&lt;>();&#xD;
&#xD;
             if (invoiceId != null &amp;&amp; !invoiceId.isEmpty()) {&#xD;
                 Optional&lt;Invoice> optInvoice = customerService.getInvoiceById(invoiceId);&#xD;
                 if (optInvoice.isPresent()) {&#xD;
                     Invoice invoice = optInvoice.get();&#xD;
                     if (invoice.getPolicyIds() != null) {&#xD;
                         policyIds.addAll(invoice.getPolicyIds());&#xD;
                         policyNames.addAll(customerService.getPolicyNamesByIds(invoice.getPolicyIds()));&#xD;
                     }&#xD;
                 }&#xD;
             }&#xD;
&#xD;
             // You may call your existing processPayment here if designed accordingly&#xD;
             // For example, calling with subscriptionId as null since this is a direct payment:&#xD;
             customerService.processPayment(razorpayOrderId, razorpayPaymentId, &quot;paid&quot;, null);&#xD;
&#xD;
             // Or if you want to store these details explicitly, you can introduce a separate method:&#xD;
             // customerService.recordPayment(customerId, razorpayPaymentId, razorpayOrderId, policyIds, policyNames);&#xD;
&#xD;
             return ResponseEntity.ok(&quot;Payment captured event processed&quot;);&#xD;
         }&#xD;
&#xD;
         // Ignore other events or handle as needed&#xD;
         return ResponseEntity.ok(&quot;Event ignored&quot;);&#xD;
&#xD;
     } catch (Exception e) {&#xD;
         // Log and respond with error&#xD;
         log.error(&quot;Webhook handling failed&quot;, e);&#xD;
         return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR).body(&quot;Error processing webhook: &quot; + e.getMessage());&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1uhIHLIEfCMALJnZIqq0A" name="getPaymentHistory" specification="_qbyXIHLIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_q1uhIXLIEfCMALJnZIqq0A" name="customerId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q1uhInLIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
              <language>java</language>
              <body>log.info(&quot;Fetching payment history for customerId: {}&quot;, customerId);&#xD;
     List&lt;Payment> payments = customerService.getPaymentHistory(customerId);&#xD;
     if (payments.isEmpty()) {&#xD;
         log.warn(&quot;No payments found for customerId: {}&quot;, customerId);&#xD;
     }&#xD;
     return ResponseEntity.ok(payments);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1vIMHLIEfCMALJnZIqq0A" name="getInvoiceById" specification="_qb0MU3LIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_q1vIMXLIEfCMALJnZIqq0A" name="invoiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q1vIMnLIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
              <language>java</language>
              <body>Optional&lt;Invoice> invoice = customerService.getInvoiceById(invoiceId);&#xD;
     return invoice.map(ResponseEntity::ok).orElseGet(() -> ResponseEntity.notFound().build());&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1vIM3LIEfCMALJnZIqq0A" name="getPolicyNamesByIds" specification="_q0iOUnLIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_q1vINHLIEfCMALJnZIqq0A" name="policyIds" type="_qyxTwHLIEfCMALJnZIqq0A"/>
              <ownedParameter xmi:id="_q1vINXLIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
              <language>java</language>
              <body>List&lt;String> names = customerService.getPolicyNamesByIds(policyIds);&#xD;
     return ResponseEntity.ok(names);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1vINnLIEfCMALJnZIqq0A" name="enableAutoPay" specification="_q0lRoHLIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_q1vIN3LIEfCMALJnZIqq0A" name="invoiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q1vIOHLIEfCMALJnZIqq0A" name="body" type="_qzVUcXLIEfCMALJnZIqq0A"/>
              <ownedParameter xmi:id="_q1vIOXLIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
              <language>java</language>
              <body>String customerId = (String) body.get(&quot;customerId&quot;);&#xD;
     int months = (int) body.get(&quot;months&quot;);&#xD;
     double amount = ((Number) body.get(&quot;amount&quot;)).doubleValue();&#xD;
     String subscriptionId = customerService.enableAutoPay(customerId, invoiceId, months, amount);&#xD;
     return ResponseEntity.ok(&quot;Autopay enabled. Subscription ID: &quot; + subscriptionId);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1vvQHLIEfCMALJnZIqq0A" name="enableAutoPayPolicy" specification="_q0oU8HLIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_q1vvQXLIEfCMALJnZIqq0A" name="policyId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q1vvQnLIEfCMALJnZIqq0A" name="body" type="_qzVUcXLIEfCMALJnZIqq0A"/>
              <ownedParameter xmi:id="_q1vvQ3LIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
              <language>java</language>
              <body>String customerId = (String) body.get(&quot;customerId&quot;);&#xD;
     int months = (int) body.get(&quot;months&quot;);&#xD;
     double amount = ((Number) body.get(&quot;amount&quot;)).doubleValue();&#xD;
     String subscriptionId = customerService.enableAutoPayPolicy(customerId, policyId, months, amount);&#xD;
     return ResponseEntity.ok(&quot;Autopay enabled for policy. Subscription ID: &quot; + subscriptionId);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1vvRHLIEfCMALJnZIqq0A" name="disableAutoPay" specification="_q0r_U3LIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_q1vvRXLIEfCMALJnZIqq0A" name="body" type="_qzVUcXLIEfCMALJnZIqq0A"/>
              <ownedParameter xmi:id="_q1vvRnLIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
              <language>java</language>
              <body>String customerId = body.get(&quot;customerId&quot;);&#xD;
     String subscriptionId = body.get(&quot;subscriptionId&quot;);&#xD;
     String policyId = body.get(&quot;policyId&quot;);&#xD;
     customerService.disableAutoPay(customerId, subscriptionId, policyId);&#xD;
     return ResponseEntity.ok(&quot;Autopay disabled&quot;);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1vvR3LIEfCMALJnZIqq0A" name="getOwnedPolicies" specification="_qb32sHLIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_q1vvSHLIEfCMALJnZIqq0A" name="customerId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q1vvSXLIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
              <language>java</language>
              <body>log.info(&quot;Fetching owned policies for customerId: {}&quot;, customerId);&#xD;
     List&lt;Policy> policies = customerService.getOwnedPolicies(customerId);&#xD;
     return ResponseEntity.ok(policies);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1vvSnLIEfCMALJnZIqq0A" name="getCustomersWithExpiringPoliciesByDays" specification="_qb5r4HLIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_q1vvS3LIEfCMALJnZIqq0A" name="days">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q1vvTHLIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
              <language>java</language>
              <body>List&lt;Customer> customers = customerService.getCustomersWithExpiringPoliciesByDays(days);&#xD;
     return ResponseEntity.ok(customers);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1vvTXLIEfCMALJnZIqq0A" name="notifyExpiringPolicies" specification="_q0vpsHLIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_q1vvTnLIEfCMALJnZIqq0A" name="requests" type="_qyxTwHLIEfCMALJnZIqq0A"/>
              <ownedParameter xmi:id="_q1vvT3LIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
              <language>java</language>
              <body>for (NotificationRequest req : requests) {&#xD;
         try {&#xD;
             customerService.sendPolicyExpiryNotification(req.getCustomerId(), req.getPolicyId());&#xD;
         } catch (Exception e) {&#xD;
             log.error(&quot;Failed to send notification to customerId: {}, policyId: {}&quot;, req.getCustomerId(), req.getPolicyId(), e);&#xD;
         }&#xD;
     }&#xD;
     return ResponseEntity.ok(&quot;Notifications triggered.&quot;);&#xD;
 </body>
            </ownedBehavior>
            <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1wWUHLIEfCMALJnZIqq0A" name="getCustomerById" specification="_qb8II3LIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_q1wWUXLIEfCMALJnZIqq0A" name="customerId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q1wWUnLIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
              <language>java</language>
              <body>try {&#xD;
         Optional&lt;Customer> customerOpt = customerRepository.findById(customerId);&#xD;
         if (customerOpt.isPresent()) {&#xD;
             return ResponseEntity.ok(customerOpt.get());&#xD;
         } else {&#xD;
             return ResponseEntity.status(HttpStatus.NOT_FOUND)&#xD;
                     .body(Map.of(&quot;message&quot;, &quot;Customer not found with id &quot; + customerId));&#xD;
         }&#xD;
     } catch (Exception ex) {&#xD;
         log.error(&quot;Error fetching customer with id {}: {}&quot;, customerId, ex.getMessage(), ex);&#xD;
         return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)&#xD;
                 .body(Map.of(&quot;message&quot;, &quot;Internal server error&quot;));&#xD;
     }&#xD;
 </body>
            </ownedBehavior>
            <ownedOperation xmi:id="_qbomIXLIEfCMALJnZIqq0A" name="getUnpaidInvoices" method="_q1tTAHLIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_qbpNMHLIEfCMALJnZIqq0A" name="customerId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q0hnQHLIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_qbuFs3LIEfCMALJnZIqq0A" name="handleWebhook" method="_q1t6EHLIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_qbuFtHLIEfCMALJnZIqq0A" name="payload">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q0hnQXLIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_qbyXIHLIEfCMALJnZIqq0A" name="getPaymentHistory" method="_q1uhIHLIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_qbyXIXLIEfCMALJnZIqq0A" name="customerId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q0iOUHLIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_qb0MU3LIEfCMALJnZIqq0A" name="getInvoiceById" method="_q1vIMHLIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_qb0zYHLIEfCMALJnZIqq0A" name="invoiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q0iOUXLIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_qb32sHLIEfCMALJnZIqq0A" name="getOwnedPolicies" method="_q1vvR3LIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_qb32sXLIEfCMALJnZIqq0A" name="customerId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q0vConLIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_qb5r4HLIEfCMALJnZIqq0A" name="getCustomersWithExpiringPoliciesByDays" method="_q1vvSnLIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_qb5r4XLIEfCMALJnZIqq0A" name="days">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q0vCo3LIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_qb8II3LIEfCMALJnZIqq0A" name="getCustomerById" method="_q1wWUHLIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_qb8IJHLIEfCMALJnZIqq0A" name="customerId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q0xe4HLIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_q0iOUnLIEfCMALJnZIqq0A" name="getPolicyNamesByIds" method="_q1vIM3LIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_q0iOU3LIEfCMALJnZIqq0A" name="policyIds" type="_qyxTwHLIEfCMALJnZIqq0A"/>
              <ownedParameter xmi:id="_q0jccXLIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_q0lRoHLIEfCMALJnZIqq0A" name="enableAutoPay" method="_q1vINnLIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_q0lRoXLIEfCMALJnZIqq0A" name="invoiceId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q0lRonLIEfCMALJnZIqq0A" name="body" type="_qzVUcXLIEfCMALJnZIqq0A"/>
              <ownedParameter xmi:id="_q0l4sXLIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_q0oU8HLIEfCMALJnZIqq0A" name="enableAutoPayPolicy" method="_q1vvQHLIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_q0oU8XLIEfCMALJnZIqq0A" name="policyId">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedParameter>
              <ownedParameter xmi:id="_q0oU8nLIEfCMALJnZIqq0A" name="body" type="_qzVUcXLIEfCMALJnZIqq0A"/>
              <ownedParameter xmi:id="_q0qKIXLIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_q0r_U3LIEfCMALJnZIqq0A" name="disableAutoPay" method="_q1vvRHLIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_q0r_VHLIEfCMALJnZIqq0A" name="body" type="_qzVUcXLIEfCMALJnZIqq0A"/>
              <ownedParameter xmi:id="_q0t0gHLIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
            </ownedOperation>
            <ownedOperation xmi:id="_q0vpsHLIEfCMALJnZIqq0A" name="notifyExpiringPolicies" method="_q1vvTXLIEfCMALJnZIqq0A">
              <ownedParameter xmi:id="_q0vpsXLIEfCMALJnZIqq0A" name="requests" type="_qyxTwHLIEfCMALJnZIqq0A"/>
              <ownedParameter xmi:id="_q0wQwXLIEfCMALJnZIqq0A" type="_qz6jQHLIEfCMALJnZIqq0A" direction="return"/>
            </ownedOperation>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_q2GUkHLIEfCMALJnZIqq0A" name="" memberEnd="_q2GUkXLIEfCMALJnZIqq0A _q02XYXLIEfCMALJnZIqq0A">
            <ownedEnd xmi:id="_q2GUkXLIEfCMALJnZIqq0A" name="" type="_qY-6wnLIEfCMALJnZIqq0A" association="_q2GUkHLIEfCMALJnZIqq0A"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_q2G7oXLIEfCMALJnZIqq0A" name="" memberEnd="_q2G7onLIEfCMALJnZIqq0A _q03lgXLIEfCMALJnZIqq0A">
            <ownedEnd xmi:id="_q2G7onLIEfCMALJnZIqq0A" name="" type="_qY-6wnLIEfCMALJnZIqq0A" association="_q2G7oXLIEfCMALJnZIqq0A"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_q2IJwXLIEfCMALJnZIqq0A" name="" memberEnd="_q2IJwnLIEfCMALJnZIqq0A _q03lhHLIEfCMALJnZIqq0A">
            <ownedEnd xmi:id="_q2IJwnLIEfCMALJnZIqq0A" name="" type="_qY-6wnLIEfCMALJnZIqq0A" association="_q2IJwXLIEfCMALJnZIqq0A"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_q2JX4XLIEfCMALJnZIqq0A" name="" memberEnd="_q2JX4nLIEfCMALJnZIqq0A _q04MknLIEfCMALJnZIqq0A">
            <ownedEnd xmi:id="_q2JX4nLIEfCMALJnZIqq0A" name="" type="_qY-6wnLIEfCMALJnZIqq0A" association="_q2JX4XLIEfCMALJnZIqq0A"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_q2PegHLIEfCMALJnZIqq0A" name="" memberEnd="_q2PegXLIEfCMALJnZIqq0A _q1TDUHLIEfCMALJnZIqq0A">
            <ownedEnd xmi:id="_q2PegXLIEfCMALJnZIqq0A" name="" type="_qbnYAHLIEfCMALJnZIqq0A" association="_q2PegHLIEfCMALJnZIqq0A"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_q2Peg3LIEfCMALJnZIqq0A" name="" memberEnd="_q2PehHLIEfCMALJnZIqq0A _q1TDU3LIEfCMALJnZIqq0A">
            <ownedEnd xmi:id="_q2PehHLIEfCMALJnZIqq0A" name="" type="_qbnYAHLIEfCMALJnZIqq0A" association="_q2Peg3LIEfCMALJnZIqq0A"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Association" xmi:id="_q2QsoHLIEfCMALJnZIqq0A" name="" memberEnd="_q2QsoXLIEfCMALJnZIqq0A _q1TqYnLIEfCMALJnZIqq0A">
            <ownedEnd xmi:id="_q2QsoXLIEfCMALJnZIqq0A" name="" type="_qbnYAHLIEfCMALJnZIqq0A" association="_q2QsoHLIEfCMALJnZIqq0A"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_qX-OIHLIEfCMALJnZIqq0A" name="CustomerMicroserviceApplication">
          <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_q1epgHLIEfCMALJnZIqq0A" name="main" specification="_qYLCcHLIEfCMALJnZIqq0A">
            <ownedParameter xmi:id="_q1epgXLIEfCMALJnZIqq0A" name="args">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_q1epgnLIEfCMALJnZIqq0A" value="*"/>
            </ownedParameter>
            <language>java</language>
            <body>SpringApplication.run(CustomerMicroserviceApplication.class, args);
	</body>
          </ownedBehavior>
          <ownedOperation xmi:id="_qYLCcHLIEfCMALJnZIqq0A" name="main" isStatic="true" method="_q1epgHLIEfCMALJnZIqq0A">
            <ownedParameter xmi:id="_qYLCcXLIEfCMALJnZIqq0A" name="args">
              <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_qYOs0HLIEfCMALJnZIqq0A" value="*"/>
            </ownedParameter>
          </ownedOperation>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_qY7QYHLIEfCMALJnZIqq0A" name="CustomerMicroserviceApplicationTests" visibility="package">
          <eAnnotations xmi:id="_qY73cHLIEfCMALJnZIqq0A" source="http://ns.yatta.de/umllab">
            <contents xmi:type="ecore:EAnnotation" xmi:id="_qY73cXLIEfCMALJnZIqq0A" source="codegen">
              <details xmi:id="_qY73cnLIEfCMALJnZIqq0A" key="codegenDirectory" value="/CustomerMicroservice/src/test/java"/>
            </contents>
          </eAnnotations>
          <ownedOperation xmi:id="_qY9FkHLIEfCMALJnZIqq0A" name="contextLoads" visibility="package"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_qUrpkHLIEfCMALJnZIqq0A" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_qUsQoHLIEfCMALJnZIqq0A" name="springframework">
        <packagedElement xmi:type="uml:Package" xmi:id="_qUsQoXLIEfCMALJnZIqq0A" name="boot">
          <packagedElement xmi:type="uml:Package" xmi:id="_qUs3sHLIEfCMALJnZIqq0A" name="autoconfigure">
            <packagedElement xmi:type="uml:Interface" xmi:id="_qytpYXLIEfCMALJnZIqq0A" name="SpringBootApplication"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_qVRfcHLIEfCMALJnZIqq0A" name="test">
            <packagedElement xmi:type="uml:Package" xmi:id="_qVRfcXLIEfCMALJnZIqq0A" name="context">
              <packagedElement xmi:type="uml:Interface" xmi:id="_qy5PkHLIEfCMALJnZIqq0A" name="SpringBootTest"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_qVUiwXLIEfCMALJnZIqq0A" name="autoconfigure">
              <packagedElement xmi:type="uml:Package" xmi:id="_qVUiwnLIEfCMALJnZIqq0A" name="web">
                <packagedElement xmi:type="uml:Package" xmi:id="_qVUiw3LIEfCMALJnZIqq0A" name="servlet">
                  <packagedElement xmi:type="uml:Interface" xmi:id="_qy-vIXLIEfCMALJnZIqq0A" name="WebMvcTest"/>
                </packagedElement>
              </packagedElement>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_qVVJ0HLIEfCMALJnZIqq0A" name="mock">
              <packagedElement xmi:type="uml:Package" xmi:id="_qVVJ0XLIEfCMALJnZIqq0A" name="mockito">
                <packagedElement xmi:type="uml:Interface" xmi:id="_qy_WMXLIEfCMALJnZIqq0A" name="MockBean"/>
              </packagedElement>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_qysbQHLIEfCMALJnZIqq0A" name="SpringApplication"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_qU2BoHLIEfCMALJnZIqq0A" name="context">
          <packagedElement xmi:type="uml:Package" xmi:id="_qU2osHLIEfCMALJnZIqq0A" name="annotation">
            <packagedElement xmi:type="uml:Interface" xmi:id="_qyu3gHLIEfCMALJnZIqq0A" name="Bean"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_qyvekXLIEfCMALJnZIqq0A" name="Configuration"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_qU3PwHLIEfCMALJnZIqq0A" name="web">
          <packagedElement xmi:type="uml:Package" xmi:id="_qU320HLIEfCMALJnZIqq0A" name="client">
            <packagedElement xmi:type="uml:Class" xmi:id="_qywFoXLIEfCMALJnZIqq0A" name="RestTemplate"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_qXCaAHLIEfCMALJnZIqq0A" name="bind">
            <packagedElement xmi:type="uml:Package" xmi:id="_qXCaAXLIEfCMALJnZIqq0A" name="annotation"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_qVEEEHLIEfCMALJnZIqq0A" name="data">
          <packagedElement xmi:type="uml:Package" xmi:id="_qVEEEXLIEfCMALJnZIqq0A" name="domain">
            <packagedElement xmi:type="uml:Class" xmi:id="_qyyh4HLIEfCMALJnZIqq0A" name="Sort"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_qVErIHLIEfCMALJnZIqq0A" name="mongodb">
            <packagedElement xmi:type="uml:Package" xmi:id="_qVErIXLIEfCMALJnZIqq0A" name="repository">
              <packagedElement xmi:type="uml:Interface" xmi:id="_qyzI8HLIEfCMALJnZIqq0A" name="MongoRepository"/>
            </packagedElement>
            <packagedElement xmi:type="uml:Package" xmi:id="_qV0SAHLIEfCMALJnZIqq0A" name="core">
              <packagedElement xmi:type="uml:Package" xmi:id="_qV0SAXLIEfCMALJnZIqq0A" name="query">
                <packagedElement xmi:type="uml:Class" xmi:id="_qzaM8HLIEfCMALJnZIqq0A" name="Criteria"/>
                <packagedElement xmi:type="uml:Class" xmi:id="_qza0AXLIEfCMALJnZIqq0A" name="Query"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_qWiDsXLIEfCMALJnZIqq0A" name="mapping">
                <packagedElement xmi:type="uml:Interface" xmi:id="_qztu8XLIEfCMALJnZIqq0A" name="Document"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_qzY-0XLIEfCMALJnZIqq0A" name="MongoTemplate"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_qWiDsHLIEfCMALJnZIqq0A" name="annotation">
            <packagedElement xmi:type="uml:Interface" xmi:id="_qztH4XLIEfCMALJnZIqq0A" name="Id"/>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_qVT7sXLIEfCMALJnZIqq0A" name="beans">
          <packagedElement xmi:type="uml:Package" xmi:id="_qVT7snLIEfCMALJnZIqq0A" name="factory">
            <packagedElement xmi:type="uml:Package" xmi:id="_qVUiwHLIEfCMALJnZIqq0A" name="annotation">
              <packagedElement xmi:type="uml:Interface" xmi:id="_qy-IEXLIEfCMALJnZIqq0A" name="Autowired"/>
              <packagedElement xmi:type="uml:Interface" xmi:id="_qzKVUXLIEfCMALJnZIqq0A" name="Value"/>
            </packagedElement>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_qVVJ0nLIEfCMALJnZIqq0A" name="http">
          <packagedElement xmi:type="uml:Class" xmi:id="_qy_9QXLIEfCMALJnZIqq0A" name="MediaType"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_qz6jQHLIEfCMALJnZIqq0A" name="ResponseEntity"/>
          <packagedElement xmi:type="uml:Enumeration" xmi:id="_qz7xYHLIEfCMALJnZIqq0A" name="HttpStatus"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_qVVJ03LIEfCMALJnZIqq0A" name="test">
          <packagedElement xmi:type="uml:Package" xmi:id="_qVVw4HLIEfCMALJnZIqq0A" name="web">
            <packagedElement xmi:type="uml:Package" xmi:id="_qVVw4XLIEfCMALJnZIqq0A" name="servlet">
              <packagedElement xmi:type="uml:Package" xmi:id="_qVYNIXLIEfCMALJnZIqq0A" name="request">
                <packagedElement xmi:type="uml:Class" xmi:id="_qzCZgHLIEfCMALJnZIqq0A" name="MockMvcRequestBuilders"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_qVY0MHLIEfCMALJnZIqq0A" name="result">
                <packagedElement xmi:type="uml:Class" xmi:id="_qzDAkXLIEfCMALJnZIqq0A" name="MockMvcResultMatchers"/>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_qzAkUXLIEfCMALJnZIqq0A" name="MockMvc"/>
            </packagedElement>
          </packagedElement>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_qVxOsHLIEfCMALJnZIqq0A" name="stereotype">
          <packagedElement xmi:type="uml:Interface" xmi:id="_qzK8YXLIEfCMALJnZIqq0A" name="Service"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_qVQ4YHLIEfCMALJnZIqq0A" name="junit">
        <packagedElement xmi:type="uml:Package" xmi:id="_qVQ4YXLIEfCMALJnZIqq0A" name="jupiter">
          <packagedElement xmi:type="uml:Package" xmi:id="_qVQ4YnLIEfCMALJnZIqq0A" name="api">
            <packagedElement xmi:type="uml:Interface" xmi:id="_qy4BcHLIEfCMALJnZIqq0A" name="Test"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_qVTUo3LIEfCMALJnZIqq0A" name="json">
        <packagedElement xmi:type="uml:Class" xmi:id="_qy7r0HLIEfCMALJnZIqq0A" name="JSONObject"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qzNYoXLIEfCMALJnZIqq0A" name="JSONArray"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_qVT7sHLIEfCMALJnZIqq0A" name="mockito">
        <packagedElement xmi:type="uml:Class" xmi:id="_qy8S4XLIEfCMALJnZIqq0A" name="ArgumentMatchers"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qy9hAXLIEfCMALJnZIqq0A" name="Mockito"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_qVYNIHLIEfCMALJnZIqq0A" name="hamcrest">
        <packagedElement xmi:type="uml:Class" xmi:id="_qzBycHLIEfCMALJnZIqq0A" name="Matchers"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_qVwnoHLIEfCMALJnZIqq0A" name="slf4j">
        <packagedElement xmi:type="uml:Interface" xmi:id="_qzIgIHLIEfCMALJnZIqq0A" name="Logger"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qzJuQHLIEfCMALJnZIqq0A" name="LoggerFactory"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_qVC18HLIEfCMALJnZIqq0A" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_qVDdAHLIEfCMALJnZIqq0A" name="util">
        <packagedElement xmi:type="uml:Package" xmi:id="_qVzq8HLIEfCMALJnZIqq0A" name="stream">
          <packagedElement xmi:type="uml:Class" xmi:id="_qzWikXLIEfCMALJnZIqq0A" name="Collectors"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Interface" xmi:id="_qyxTwHLIEfCMALJnZIqq0A" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qy0XEHLIEfCMALJnZIqq0A" name="Optional"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qzLjcXLIEfCMALJnZIqq0A" name="ArrayList"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qzMxkXLIEfCMALJnZIqq0A" name="Base64"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_qzRqEXLIEfCMALJnZIqq0A" name="Calendar"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qzS4MXLIEfCMALJnZIqq0A" name="Collections"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_qzTfQXLIEfCMALJnZIqq0A" name="Date"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qzUtYHLIEfCMALJnZIqq0A" name="HashMap"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_qzVUcXLIEfCMALJnZIqq0A" name="Map"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_qVx1wHLIEfCMALJnZIqq0A" name="nio">
        <packagedElement xmi:type="uml:Package" xmi:id="_qVx1wXLIEfCMALJnZIqq0A" name="charset">
          <packagedElement xmi:type="uml:Class" xmi:id="_qzN_sXLIEfCMALJnZIqq0A" name="StandardCharsets"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_qVzq8XLIEfCMALJnZIqq0A" name="time">
        <packagedElement xmi:type="uml:Class" xmi:id="_qzXJoXLIEfCMALJnZIqq0A" name="LocalDate"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qzYXwXLIEfCMALJnZIqq0A" name="ZoneId"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_q0OsUHLIEfCMALJnZIqq0A" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_q0OsUXLIEfCMALJnZIqq0A" name="Exception"/>
        <packagedElement xmi:type="uml:DataType" xmi:id="_q0WoIHLIEfCMALJnZIqq0A" name="Double"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_qVStkHLIEfCMALJnZIqq0A" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_qVTUoHLIEfCMALJnZIqq0A" name="fasterxml">
        <packagedElement xmi:type="uml:Package" xmi:id="_qVTUoXLIEfCMALJnZIqq0A" name="jackson">
          <packagedElement xmi:type="uml:Package" xmi:id="_qVTUonLIEfCMALJnZIqq0A" name="databind">
            <packagedElement xmi:type="uml:Class" xmi:id="_qy6dsHLIEfCMALJnZIqq0A" name="ObjectMapper"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_qVyc0HLIEfCMALJnZIqq0A" name="razorpay">
        <packagedElement xmi:type="uml:Class" xmi:id="_qzPN0XLIEfCMALJnZIqq0A" name="RazorpayClient"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qzP04XLIEfCMALJnZIqq0A" name="RazorpayException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_qzRDAXLIEfCMALJnZIqq0A" name="Subscription"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_qWhcoHLIEfCMALJnZIqq0A" name="lombok">
      <packagedElement xmi:type="uml:Interface" xmi:id="_qzr5wHLIEfCMALJnZIqq0A" name="Data"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_qzwyQHLIEfCMALJnZIqq0A" name="AllArgsConstructor"/>
      <packagedElement xmi:type="uml:Interface" xmi:id="_qzxZUXLIEfCMALJnZIqq0A" name="NoArgsConstructor"/>
    </packagedElement>
    <profileApplication xmi:id="_pDUIUHLIEfCMALJnZIqq0A">
      <eAnnotations xmi:id="_pDbdEHLIEfCMALJnZIqq0A" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_pDlOEHLIEfCMALJnZIqq0A" base_Package="_mV1OYHLIEfCMALJnZIqq0A">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qYFi4HLIEfCMALJnZIqq0A" base_Element="_qX-OIHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:StyledElement xmi:id="_qYOFwHLIEfCMALJnZIqq0A" base_Element="_qYLCcHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_qYP68HLIEfCMALJnZIqq0A" base_Element="_qX-OIHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qYX2wHLIEfCMALJnZIqq0A" name="SpringBootApplication"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qYaTAHLIEfCMALJnZIqq0A" base_Element="_qYYd0HLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_qYdWUHLIEfCMALJnZIqq0A" base_Element="_qYaTAXLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qYdWUXLIEfCMALJnZIqq0A" name="Bean"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qYd9YHLIEfCMALJnZIqq0A" base_Element="_qYYd0HLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qYekcHLIEfCMALJnZIqq0A" name="Configuration"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qYtN8HLIEfCMALJnZIqq0A" genericsValue="Invoice" base_Element="_qYqxsHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qY8egHLIEfCMALJnZIqq0A" base_Element="_qY7QYHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_qY-TsHLIEfCMALJnZIqq0A" base_Element="_qY9FkHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qY-TsXLIEfCMALJnZIqq0A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qY-6wHLIEfCMALJnZIqq0A" base_Element="_qY7QYHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qY-6wXLIEfCMALJnZIqq0A" name="SpringBootTest"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qZAv8HLIEfCMALJnZIqq0A" base_Element="_qY-6wnLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_qZDzQHLIEfCMALJnZIqq0A" base_Element="_qZClIHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qZDzQXLIEfCMALJnZIqq0A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qZFBYHLIEfCMALJnZIqq0A" base_Element="_qZEaUHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qZFBYXLIEfCMALJnZIqq0A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qZGPgHLIEfCMALJnZIqq0A" base_Element="_qZFocHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qZG2kHLIEfCMALJnZIqq0A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qZIEsHLIEfCMALJnZIqq0A" base_Element="_qZHdoHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qZIrwHLIEfCMALJnZIqq0A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qZJS0HLIEfCMALJnZIqq0A" base_Element="_qZIrwXLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qZJ54HLIEfCMALJnZIqq0A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qZLIAHLIEfCMALJnZIqq0A" base_Element="_qZJ54XLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qZLIAXLIEfCMALJnZIqq0A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qZMWIHLIEfCMALJnZIqq0A" base_Element="_qZLvEHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qZMWIXLIEfCMALJnZIqq0A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qZNkQHLIEfCMALJnZIqq0A" base_Element="_qZM9MHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qZNkQXLIEfCMALJnZIqq0A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qZOLUXLIEfCMALJnZIqq0A" base_Element="_qZOLUHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qZOLUnLIEfCMALJnZIqq0A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qZPZcXLIEfCMALJnZIqq0A" base_Element="_qZPZcHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qZQAgHLIEfCMALJnZIqq0A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qZQnkHLIEfCMALJnZIqq0A" base_Element="_qZQAgXLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qZQnkXLIEfCMALJnZIqq0A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qZR1sHLIEfCMALJnZIqq0A" base_Element="_qZROoHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qZScwHLIEfCMALJnZIqq0A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qZTq4HLIEfCMALJnZIqq0A" base_Element="_qZTD0HLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qZUR8HLIEfCMALJnZIqq0A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qZVgEHLIEfCMALJnZIqq0A" base_Element="_qZU5AHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qZVgEXLIEfCMALJnZIqq0A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qZWuMHLIEfCMALJnZIqq0A" base_Element="_qZWHIHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qZWuMXLIEfCMALJnZIqq0A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qZXVQXLIEfCMALJnZIqq0A" base_Element="_qZXVQHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qZX8UHLIEfCMALJnZIqq0A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qZYjYHLIEfCMALJnZIqq0A" base_Element="_qZX8UXLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qZYjYXLIEfCMALJnZIqq0A" name="Test"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qZZKcHLIEfCMALJnZIqq0A" base_Element="_qY-6wnLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qZZKcXLIEfCMALJnZIqq0A" name="WebMvcTest">
      <annotationParameters xmi:id="_qZZxgHLIEfCMALJnZIqq0A" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_q1yLgHLIEfCMALJnZIqq0A" value="CustomerController.class"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qZvvwHLIEfCMALJnZIqq0A" base_Element="_qZqQMHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:StyledElement xmi:id="_qZ2dcHLIEfCMALJnZIqq0A" base_Element="_qZ0oQHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:StyledElement xmi:id="_qZ45sHLIEfCMALJnZIqq0A" base_Element="_qZ3rkHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:StyledElement xmi:id="_qZ6u4HLIEfCMALJnZIqq0A" base_Element="_qZ5gwHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_qZ8kEHLIEfCMALJnZIqq0A" base_Element="_qZ7V8HLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qZ8kEXLIEfCMALJnZIqq0A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qZ_nYHLIEfCMALJnZIqq0A" base_Element="_qZ9LIHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qZ_nYXLIEfCMALJnZIqq0A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qaDRwHLIEfCMALJnZIqq0A" base_Element="_qaA1gHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qaDRwXLIEfCMALJnZIqq0A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qaGVEHLIEfCMALJnZIqq0A" base_Element="_qaD40HLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qaGVEXLIEfCMALJnZIqq0A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qaIKQHLIEfCMALJnZIqq0A" genericsValue="Invoice" base_Element="_qaG8IHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_qaJYYHLIEfCMALJnZIqq0A" base_Element="_qaG8IHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qaJYYXLIEfCMALJnZIqq0A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qaOQ4HLIEfCMALJnZIqq0A" base_Element="_qaLNkHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qaOQ4XLIEfCMALJnZIqq0A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_qaQtIHLIEfCMALJnZIqq0A" base_Element="_qaPfAHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_qaU-kHLIEfCMALJnZIqq0A" base_Element="_qaR7QHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qaU-kXLIEfCMALJnZIqq0A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qaWzwHLIEfCMALJnZIqq0A" base_Element="_qaVloHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qaWzwXLIEfCMALJnZIqq0A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qaYo8HLIEfCMALJnZIqq0A" base_Element="_qaXa0HLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qaYo8XLIEfCMALJnZIqq0A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qaZ3EHLIEfCMALJnZIqq0A" base_Element="_qaYo8nLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qaZ3EXLIEfCMALJnZIqq0A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_qabFM3LIEfCMALJnZIqq0A" base_Element="_qaaeIHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_qac6YHLIEfCMALJnZIqq0A" base_Element="_qZqQMHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qac6YXLIEfCMALJnZIqq0A" name="Service"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qauAIHLIEfCMALJnZIqq0A" genericsValue="Invoice" base_Element="_qaq80HLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qa7bgHLIEfCMALJnZIqq0A" base_Element="_qa6NYHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_qa-e0HLIEfCMALJnZIqq0A" base_Element="_qa6NYHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qa_F4HLIEfCMALJnZIqq0A" name="Data"/>
    <annotations xmi:id="_qa_F4XLIEfCMALJnZIqq0A" name="Document">
      <annotationParameters xmi:id="_qa_F4nLIEfCMALJnZIqq0A" name="collection" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_q1yylXLIEfCMALJnZIqq0A" value="&quot;policies&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qbDXUHLIEfCMALJnZIqq0A" base_Element="_qbCwQHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_qbHowHLIEfCMALJnZIqq0A" base_Element="_qbGaoHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qbHowXLIEfCMALJnZIqq0A" name="Data"/>
    <annotations xmi:id="_qbHownLIEfCMALJnZIqq0A" name="AllArgsConstructor"/>
    <annotations xmi:id="_qbHow3LIEfCMALJnZIqq0A" name="NoArgsConstructor"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qbI24HLIEfCMALJnZIqq0A" base_Element="_qbCwQHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qbI24XLIEfCMALJnZIqq0A" name="Document">
      <annotationParameters xmi:id="_qbI24nLIEfCMALJnZIqq0A" name="collection" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_q1zZoHLIEfCMALJnZIqq0A" value="&quot;payments&quot;"/>
      </annotationParameters>
    </annotations>
    <annotations xmi:id="_qbI243LIEfCMALJnZIqq0A" name="Data"/>
    <annotations xmi:id="_qbI25HLIEfCMALJnZIqq0A" name="AllArgsConstructor"/>
    <annotations xmi:id="_qbI25XLIEfCMALJnZIqq0A" name="NoArgsConstructor"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qbNvYHLIEfCMALJnZIqq0A" base_Element="_qbMhQHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_qbSn4HLIEfCMALJnZIqq0A" base_Element="_qbQLoHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qbSn4XLIEfCMALJnZIqq0A" name="Data"/>
    <annotations xmi:id="_qbSn4nLIEfCMALJnZIqq0A" name="AllArgsConstructor"/>
    <annotations xmi:id="_qbSn43LIEfCMALJnZIqq0A" name="NoArgsConstructor"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qbT2AHLIEfCMALJnZIqq0A" base_Element="_qbMhQHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qbT2AXLIEfCMALJnZIqq0A" name="Document">
      <annotationParameters xmi:id="_qbT2AnLIEfCMALJnZIqq0A" name="collection" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_q1zZoXLIEfCMALJnZIqq0A" value="&quot;invoices&quot;"/>
      </annotationParameters>
    </annotations>
    <annotations xmi:id="_qbUdEHLIEfCMALJnZIqq0A" name="Data"/>
    <annotations xmi:id="_qbUdEXLIEfCMALJnZIqq0A" name="AllArgsConstructor"/>
    <annotations xmi:id="_qbUdEnLIEfCMALJnZIqq0A" name="NoArgsConstructor"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qbcY4HLIEfCMALJnZIqq0A" base_Element="_qbbKwHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_qbh4cHLIEfCMALJnZIqq0A" base_Element="_qbfcMHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qbjGkHLIEfCMALJnZIqq0A" name="Data"/>
    <annotations xmi:id="_qbjGkXLIEfCMALJnZIqq0A" name="AllArgsConstructor"/>
    <annotations xmi:id="_qbjGknLIEfCMALJnZIqq0A" name="NoArgsConstructor"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qbk7wHLIEfCMALJnZIqq0A" base_Element="_qbbKwHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qbk7wXLIEfCMALJnZIqq0A" name="Document">
      <annotationParameters xmi:id="_qbk7wnLIEfCMALJnZIqq0A" name="collection" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_q1zZonLIEfCMALJnZIqq0A" value="&quot;customers&quot;"/>
      </annotationParameters>
    </annotations>
    <annotations xmi:id="_qbk7w3LIEfCMALJnZIqq0A" name="Data"/>
    <annotations xmi:id="_qbk7xHLIEfCMALJnZIqq0A" name="AllArgsConstructor"/>
    <annotations xmi:id="_qbk7xXLIEfCMALJnZIqq0A" name="NoArgsConstructor"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_qbomIHLIEfCMALJnZIqq0A" base_Element="_qbnYAHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Generics xmi:id="_qbrCYHLIEfCMALJnZIqq0A" genericsValue="List&lt;Invoice>" base_Element="_qbomIXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_qbs3kHLIEfCMALJnZIqq0A" base_Element="_qbpNMHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qbs3kXLIEfCMALJnZIqq0A" name="PathVariable"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qbuFsHLIEfCMALJnZIqq0A" base_Element="_qbomIXLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qbuFsXLIEfCMALJnZIqq0A" name="GetMapping">
      <annotationParameters xmi:id="_qbuFsnLIEfCMALJnZIqq0A" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_q10AsXLIEfCMALJnZIqq0A" value="&quot;/invoices/unpaid/{customerId}&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qbwh8HLIEfCMALJnZIqq0A" genericsValue="String" base_Element="_qbuFs3LIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_qbxJAHLIEfCMALJnZIqq0A" base_Element="_qbuFtHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qbxJAXLIEfCMALJnZIqq0A" name="RequestBody"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qbxwEHLIEfCMALJnZIqq0A" base_Element="_qbuFs3LIEfCMALJnZIqq0A">
    <annotations xmi:id="_qbxwEXLIEfCMALJnZIqq0A" name="PostMapping">
      <annotationParameters xmi:id="_qbxwEnLIEfCMALJnZIqq0A" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_q10AsnLIEfCMALJnZIqq0A" value="&quot;/webhook&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qbzlQHLIEfCMALJnZIqq0A" genericsValue="List&lt;Payment>" base_Element="_qbyXIHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_qbzlQXLIEfCMALJnZIqq0A" base_Element="_qbyXIXLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qbzlQnLIEfCMALJnZIqq0A" name="PathVariable"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qb0MUHLIEfCMALJnZIqq0A" base_Element="_qbyXIHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qb0MUXLIEfCMALJnZIqq0A" name="GetMapping">
      <annotationParameters xmi:id="_qb0MUnLIEfCMALJnZIqq0A" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_q10As3LIEfCMALJnZIqq0A" value="&quot;/payments/history/{customerId}&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qb1acHLIEfCMALJnZIqq0A" genericsValue="Invoice" base_Element="_qb0MU3LIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_qb2okHLIEfCMALJnZIqq0A" base_Element="_qb0zYHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qb2okXLIEfCMALJnZIqq0A" name="PathVariable"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qb2oknLIEfCMALJnZIqq0A" base_Element="_qb0MU3LIEfCMALJnZIqq0A">
    <annotations xmi:id="_qb2ok3LIEfCMALJnZIqq0A" name="GetMapping">
      <annotationParameters xmi:id="_qb2olHLIEfCMALJnZIqq0A" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_q10AtHLIEfCMALJnZIqq0A" value="&quot;/invoices/{invoiceId}&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qb4dwHLIEfCMALJnZIqq0A" genericsValue="List&lt;Policy>" base_Element="_qb32sHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_qb5E0HLIEfCMALJnZIqq0A" base_Element="_qb32sXLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qb5E0XLIEfCMALJnZIqq0A" name="PathVariable"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qb5E0nLIEfCMALJnZIqq0A" base_Element="_qb32sHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qb5E03LIEfCMALJnZIqq0A" name="GetMapping">
      <annotationParameters xmi:id="_qb5E1HLIEfCMALJnZIqq0A" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_q10nwHLIEfCMALJnZIqq0A" value="&quot;/policies/owned/{customerId}&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qb6S8HLIEfCMALJnZIqq0A" genericsValue="List&lt;Customer>" base_Element="_qb5r4HLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_qb66AHLIEfCMALJnZIqq0A" base_Element="_qb5r4XLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qb66AXLIEfCMALJnZIqq0A" name="RequestParam"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qb8IIHLIEfCMALJnZIqq0A" base_Element="_qb5r4HLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qb8IIXLIEfCMALJnZIqq0A" name="GetMapping">
      <annotationParameters xmi:id="_qb8IInLIEfCMALJnZIqq0A" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_q10nwXLIEfCMALJnZIqq0A" value="&quot;/customers/expiring-policies/by-days&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_qb99UHLIEfCMALJnZIqq0A" genericsValue="?" base_Element="_qb8II3LIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_qb_LcHLIEfCMALJnZIqq0A" base_Element="_qb8IJHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qb_LcXLIEfCMALJnZIqq0A" name="PathVariable"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qb_ygHLIEfCMALJnZIqq0A" base_Element="_qb8II3LIEfCMALJnZIqq0A">
    <annotations xmi:id="_qb_ygXLIEfCMALJnZIqq0A" name="GetMapping">
      <annotationParameters xmi:id="_qb_ygnLIEfCMALJnZIqq0A" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_q10nw3LIEfCMALJnZIqq0A" value="&quot;/{customerId}&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_qcBAoHLIEfCMALJnZIqq0A" base_Element="_qbnYAHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_qcBAoXLIEfCMALJnZIqq0A" name="RestController"/>
    <annotations xmi:id="_qcBAonLIEfCMALJnZIqq0A" name="RequestMapping">
      <annotationParameters xmi:id="_qcBAo3LIEfCMALJnZIqq0A" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_q10AsHLIEfCMALJnZIqq0A" value="&quot;/api/customer&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_qytpYHLIEfCMALJnZIqq0A" base_Element="_qysbQHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qyuQcHLIEfCMALJnZIqq0A" base_Element="_qytpYXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qyvekHLIEfCMALJnZIqq0A" base_Element="_qyu3gHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qywFoHLIEfCMALJnZIqq0A" base_Element="_qyvekXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qywssHLIEfCMALJnZIqq0A" base_Element="_qywFoXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qyx60HLIEfCMALJnZIqq0A" base_Element="_qyxTwHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qyyh4XLIEfCMALJnZIqq0A" base_Element="_qyyh4HLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qyzI8XLIEfCMALJnZIqq0A" base_Element="_qyzI8HLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qy0-IHLIEfCMALJnZIqq0A" base_Element="_qy0XEHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qy4ogHLIEfCMALJnZIqq0A" base_Element="_qy4BcHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qy52oHLIEfCMALJnZIqq0A" base_Element="_qy5PkHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qy7EwHLIEfCMALJnZIqq0A" base_Element="_qy6dsHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qy8S4HLIEfCMALJnZIqq0A" base_Element="_qy7r0HLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qy9hAHLIEfCMALJnZIqq0A" base_Element="_qy8S4XLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qy-IEHLIEfCMALJnZIqq0A" base_Element="_qy9hAXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qy-vIHLIEfCMALJnZIqq0A" base_Element="_qy-IEXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qy_WMHLIEfCMALJnZIqq0A" base_Element="_qy-vIXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qy_9QHLIEfCMALJnZIqq0A" base_Element="_qy_WMXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzAkUHLIEfCMALJnZIqq0A" base_Element="_qy_9QXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzAkUnLIEfCMALJnZIqq0A" base_Element="_qzAkUXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzBycXLIEfCMALJnZIqq0A" base_Element="_qzBycHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzDAkHLIEfCMALJnZIqq0A" base_Element="_qzCZgHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzDnoHLIEfCMALJnZIqq0A" base_Element="_qzDAkXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzJHMHLIEfCMALJnZIqq0A" base_Element="_qzIgIHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzKVUHLIEfCMALJnZIqq0A" base_Element="_qzJuQHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzK8YHLIEfCMALJnZIqq0A" base_Element="_qzKVUXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzLjcHLIEfCMALJnZIqq0A" base_Element="_qzK8YXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzMxkHLIEfCMALJnZIqq0A" base_Element="_qzLjcXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzNYoHLIEfCMALJnZIqq0A" base_Element="_qzMxkXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzN_sHLIEfCMALJnZIqq0A" base_Element="_qzNYoXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzPN0HLIEfCMALJnZIqq0A" base_Element="_qzN_sXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzP04HLIEfCMALJnZIqq0A" base_Element="_qzPN0XLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzRDAHLIEfCMALJnZIqq0A" base_Element="_qzP04XLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzRqEHLIEfCMALJnZIqq0A" base_Element="_qzRDAXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzS4MHLIEfCMALJnZIqq0A" base_Element="_qzRqEXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzTfQHLIEfCMALJnZIqq0A" base_Element="_qzS4MXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzUGUHLIEfCMALJnZIqq0A" base_Element="_qzTfQXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzVUcHLIEfCMALJnZIqq0A" base_Element="_qzUtYHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzWikHLIEfCMALJnZIqq0A" base_Element="_qzVUcXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzXJoHLIEfCMALJnZIqq0A" base_Element="_qzWikXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzYXwHLIEfCMALJnZIqq0A" base_Element="_qzXJoXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzY-0HLIEfCMALJnZIqq0A" base_Element="_qzYXwXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzZl4HLIEfCMALJnZIqq0A" base_Element="_qzY-0XLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qza0AHLIEfCMALJnZIqq0A" base_Element="_qzaM8HLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzbbEHLIEfCMALJnZIqq0A" base_Element="_qza0AXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qztH4HLIEfCMALJnZIqq0A" base_Element="_qzr5wHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qztu8HLIEfCMALJnZIqq0A" base_Element="_qztH4XLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzu9EHLIEfCMALJnZIqq0A" base_Element="_qztu8XLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzxZUHLIEfCMALJnZIqq0A" base_Element="_qzwyQHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qzyAYHLIEfCMALJnZIqq0A" base_Element="_qzxZUXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qz7KUHLIEfCMALJnZIqq0A" base_Element="_qz6jQHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_qz8YcHLIEfCMALJnZIqq0A" base_Element="_qz7xYHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Generics xmi:id="_q0H-oHLIEfCMALJnZIqq0A" genericsValue="Customer, String" base_Element="_q0HXkHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Generics xmi:id="_q0JMwHLIEfCMALJnZIqq0A" genericsValue="Invoice, String" base_Element="_q0IlsHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Generics xmi:id="_q0Ka4HLIEfCMALJnZIqq0A" genericsValue="String" base_Element="_q0Jz0nLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Generics xmi:id="_q0LpAHLIEfCMALJnZIqq0A" genericsValue="Payment, String" base_Element="_q0LB8HLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Generics xmi:id="_q0NeMHLIEfCMALJnZIqq0A" genericsValue="Policy, String" base_Element="_q0M3IHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Generics xmi:id="_q0OFQHLIEfCMALJnZIqq0A" genericsValue="String" base_Element="_q0NeMnLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_q0PTYHLIEfCMALJnZIqq0A" base_Element="_q0OsUXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:StyledElement xmi:id="_q0S9xXLIEfCMALJnZIqq0A" base_Element="_q0SWsHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Generics xmi:id="_q0Tk0HLIEfCMALJnZIqq0A" genericsValue="String" base_Element="_q0S9w3LIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Generics xmi:id="_q0UL4HLIEfCMALJnZIqq0A" genericsValue="String" base_Element="_q0S9xHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Generics xmi:id="_q0WBEHLIEfCMALJnZIqq0A" genericsValue="String" base_Element="_q0Uy8XLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_q0WBEXLIEfCMALJnZIqq0A" base_Element="_q0Uy8HLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q0WBEnLIEfCMALJnZIqq0A" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_q0XPMHLIEfCMALJnZIqq0A" base_Element="_q0WoIHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:StyledElement xmi:id="_q0X2QHLIEfCMALJnZIqq0A" base_Element="_q0XPMXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Generics xmi:id="_q0aSgHLIEfCMALJnZIqq0A" genericsValue="String" base_Element="_q0ZrcHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Generics xmi:id="_q0bgoHLIEfCMALJnZIqq0A" genericsValue="String" base_Element="_q0a5lXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Generics xmi:id="_q0cHsHLIEfCMALJnZIqq0A" genericsValue="String" base_Element="_q0a5lnLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Generics xmi:id="_q0jccHLIEfCMALJnZIqq0A" genericsValue="List&lt;String>" base_Element="_q0iOUnLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Generics xmi:id="_q0kDgHLIEfCMALJnZIqq0A" genericsValue="String" base_Element="_q0iOU3LIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_q0kDgXLIEfCMALJnZIqq0A" base_Element="_q0iOU3LIEfCMALJnZIqq0A">
    <annotations xmi:id="_q0kqkHLIEfCMALJnZIqq0A" name="RequestBody"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_q0kqkXLIEfCMALJnZIqq0A" base_Element="_q0iOUnLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q0kqknLIEfCMALJnZIqq0A" name="PostMapping">
      <annotationParameters xmi:id="_q0kqk3LIEfCMALJnZIqq0A" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_q10AtXLIEfCMALJnZIqq0A" value="&quot;/policies/names&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_q0l4sHLIEfCMALJnZIqq0A" genericsValue="String" base_Element="_q0lRoHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_q0mfwHLIEfCMALJnZIqq0A" base_Element="_q0lRoXLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q0mfwXLIEfCMALJnZIqq0A" name="PathVariable"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_q0nG0HLIEfCMALJnZIqq0A" genericsValue="String, Object" base_Element="_q0lRonLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_q0nG0XLIEfCMALJnZIqq0A" base_Element="_q0lRonLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q0nt4HLIEfCMALJnZIqq0A" name="RequestBody"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_q0nt4XLIEfCMALJnZIqq0A" base_Element="_q0lRoHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q0nt4nLIEfCMALJnZIqq0A" name="PostMapping">
      <annotationParameters xmi:id="_q0nt43LIEfCMALJnZIqq0A" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_q10AtnLIEfCMALJnZIqq0A" value="&quot;/autopay/enable/{invoiceId}&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_q0qKIHLIEfCMALJnZIqq0A" genericsValue="String" base_Element="_q0oU8HLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_q0qxMHLIEfCMALJnZIqq0A" base_Element="_q0oU8XLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q0qxMXLIEfCMALJnZIqq0A" name="PathVariable"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_q0rYQHLIEfCMALJnZIqq0A" genericsValue="String, Object" base_Element="_q0oU8nLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_q0rYQXLIEfCMALJnZIqq0A" base_Element="_q0oU8nLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q0rYQnLIEfCMALJnZIqq0A" name="RequestBody"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_q0r_UHLIEfCMALJnZIqq0A" base_Element="_q0oU8HLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q0r_UXLIEfCMALJnZIqq0A" name="PostMapping">
      <annotationParameters xmi:id="_q0r_UnLIEfCMALJnZIqq0A" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_q10At3LIEfCMALJnZIqq0A" value="&quot;/autopay/enable/policy/{policyId}&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_q0tNcHLIEfCMALJnZIqq0A" genericsValue="String" base_Element="_q0r_U3LIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Generics xmi:id="_q0ubkHLIEfCMALJnZIqq0A" genericsValue="String, String" base_Element="_q0r_VHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_q0ubkXLIEfCMALJnZIqq0A" base_Element="_q0r_VHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q0ubknLIEfCMALJnZIqq0A" name="RequestBody"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_q0ubk3LIEfCMALJnZIqq0A" base_Element="_q0r_U3LIEfCMALJnZIqq0A">
    <annotations xmi:id="_q0vCoHLIEfCMALJnZIqq0A" name="PostMapping">
      <annotationParameters xmi:id="_q0vCoXLIEfCMALJnZIqq0A" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_q10AuHLIEfCMALJnZIqq0A" value="&quot;/autopay/disable&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_q0wQwHLIEfCMALJnZIqq0A" genericsValue="String" base_Element="_q0vpsHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Generics xmi:id="_q0w30HLIEfCMALJnZIqq0A" genericsValue="NotificationRequest" base_Element="_q0vpsXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_q0w30XLIEfCMALJnZIqq0A" base_Element="_q0vpsXLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q0w30nLIEfCMALJnZIqq0A" name="RequestBody"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_q0w303LIEfCMALJnZIqq0A" base_Element="_q0vpsHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q0w31HLIEfCMALJnZIqq0A" name="PostMapping">
      <annotationParameters xmi:id="_q0w31XLIEfCMALJnZIqq0A" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_q10nwnLIEfCMALJnZIqq0A" value="&quot;/customers/expiring-policies/notify&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_q02-cHLIEfCMALJnZIqq0A" base_Element="_q02XYXLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q03lgHLIEfCMALJnZIqq0A" name="Autowired"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_q03lgnLIEfCMALJnZIqq0A" base_Element="_q03lgXLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q03lg3LIEfCMALJnZIqq0A" name="MockBean"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_q04MkHLIEfCMALJnZIqq0A" base_Element="_q03lhHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q04MkXLIEfCMALJnZIqq0A" name="MockBean"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_q04Mk3LIEfCMALJnZIqq0A" base_Element="_q04MknLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q04zoHLIEfCMALJnZIqq0A" name="Autowired"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_q05asXLIEfCMALJnZIqq0A" base_Element="_q04zoXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_q05as3LIEfCMALJnZIqq0A" base_Element="_q05asnLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q06BwHLIEfCMALJnZIqq0A" name="Autowired"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_q06BwnLIEfCMALJnZIqq0A" base_Element="_q06BwXLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q06Bw3LIEfCMALJnZIqq0A" name="Autowired"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_q06o0HLIEfCMALJnZIqq0A" base_Element="_q06BxHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q06o0XLIEfCMALJnZIqq0A" name="Autowired"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_q06o03LIEfCMALJnZIqq0A" base_Element="_q06o0nLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q06o1HLIEfCMALJnZIqq0A" name="Autowired"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_q06o1nLIEfCMALJnZIqq0A" base_Element="_q06o1XLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q06o13LIEfCMALJnZIqq0A" name="Autowired"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_q0728XLIEfCMALJnZIqq0A" base_Element="_q0728HLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q0728nLIEfCMALJnZIqq0A" name="Autowired"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_q08eAHLIEfCMALJnZIqq0A" base_Element="_q07283LIEfCMALJnZIqq0A">
    <annotations xmi:id="_q08eAXLIEfCMALJnZIqq0A" name="Value">
      <annotationParameters xmi:id="_q08eAnLIEfCMALJnZIqq0A" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_q1yykHLIEfCMALJnZIqq0A" value="&quot;${razorpay.key_id}&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_q09FEHLIEfCMALJnZIqq0A" base_Element="_q08eA3LIEfCMALJnZIqq0A">
    <annotations xmi:id="_q09FEXLIEfCMALJnZIqq0A" name="Value">
      <annotationParameters xmi:id="_q09FEnLIEfCMALJnZIqq0A" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_q1yykXLIEfCMALJnZIqq0A" value="&quot;${razorpay.key_secret}&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_q09sIHLIEfCMALJnZIqq0A" base_Element="_q09FE3LIEfCMALJnZIqq0A">
    <annotations xmi:id="_q09sIXLIEfCMALJnZIqq0A" name="Value">
      <annotationParameters xmi:id="_q09sInLIEfCMALJnZIqq0A" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_q1yyknLIEfCMALJnZIqq0A" value="&quot;${razorpay.plan_id}&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_q09sJHLIEfCMALJnZIqq0A" base_Element="_q09sI3LIEfCMALJnZIqq0A">
    <annotations xmi:id="_q0-TMHLIEfCMALJnZIqq0A" name="Value">
      <annotationParameters xmi:id="_q0-TMXLIEfCMALJnZIqq0A" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_q1yyk3LIEfCMALJnZIqq0A" value="&quot;${notification.base_url}&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_q1AIYHLIEfCMALJnZIqq0A" base_Element="_q0_hUHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q1AIYXLIEfCMALJnZIqq0A" name="Id"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_q1DywHLIEfCMALJnZIqq0A" base_Element="_q1DLsHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q1DywXLIEfCMALJnZIqq0A" name="Id"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_q1J5YHLIEfCMALJnZIqq0A" base_Element="_q1JSUHLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q1J5YXLIEfCMALJnZIqq0A" name="Id"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_q1PY8HLIEfCMALJnZIqq0A" base_Element="_q1Ox4HLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q1PY8XLIEfCMALJnZIqq0A" name="Id"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:StyledElement xmi:id="_q1TDUnLIEfCMALJnZIqq0A" base_Element="_q1TDUHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Annotations xmi:id="_q1TqYHLIEfCMALJnZIqq0A" base_Element="_q1TDU3LIEfCMALJnZIqq0A">
    <annotations xmi:id="_q1TqYXLIEfCMALJnZIqq0A" name="Autowired"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_q1URcHLIEfCMALJnZIqq0A" base_Element="_q1TqYnLIEfCMALJnZIqq0A">
    <annotations xmi:id="_q1URcXLIEfCMALJnZIqq0A" name="Autowired"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_q2G7oHLIEfCMALJnZIqq0A" base_Element="_q2GUkHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_q2IJwHLIEfCMALJnZIqq0A" base_Element="_q2G7oXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_q2JX4HLIEfCMALJnZIqq0A" base_Element="_q2IJwXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_q2J-8HLIEfCMALJnZIqq0A" base_Element="_q2JX4XLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_q2LNEHLIEfCMALJnZIqq0A" base_Element="_q2J-8XLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_q2L0IHLIEfCMALJnZIqq0A" base_Element="_q2LNEXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_q2L0I3LIEfCMALJnZIqq0A" base_Element="_q2L0IXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_q2MbMHLIEfCMALJnZIqq0A" base_Element="_q2L0JHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_q2NCQHLIEfCMALJnZIqq0A" base_Element="_q2MbMXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_q2NCQ3LIEfCMALJnZIqq0A" base_Element="_q2NCQXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_q2NpUnLIEfCMALJnZIqq0A" base_Element="_q2NpUHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_q2OQYHLIEfCMALJnZIqq0A" base_Element="_q2NpU3LIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_q2O3cHLIEfCMALJnZIqq0A" base_Element="_q2OQYXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_q2O3c3LIEfCMALJnZIqq0A" base_Element="_q2O3cXLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_q2PegnLIEfCMALJnZIqq0A" base_Element="_q2PegHLIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_q2QFkHLIEfCMALJnZIqq0A" base_Element="_q2Peg3LIEfCMALJnZIqq0A"/>
  <UMLLabProfile:Reference xmi:id="_q2QsonLIEfCMALJnZIqq0A" base_Element="_q2QsoHLIEfCMALJnZIqq0A"/>
</xmi:XMI>
